<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_ufw_zn2_jr">
  <title>审计</title>
  <shortdesc>描述被记录并且应该被监控以检测安全性威胁的Greenplum数据库事件。</shortdesc>
  <body>
    <p>Greenplum数据库有能力审计很多事件，包括系统的启动和关闭、Segment数据库失效、导致错误的SQL语句以及所有的连接尝试和断开连接。Greenplum数据库还记录SQL语句和关于SQL语句的信息，并且可以以多种方式配置来记录不同细节的审计信息。<codeph>log_error_verbosity</codeph>配置参数控制写入到服务器日志中的每一条消息的细节多少。类似地，<codeph>log_min_error_statement</codeph>参数允许管理员配置为SQL语句记录的细节层次，而<codeph>log_statement</codeph>参数确定要被审计的SQL语句的种类。当可审计事件由Greenplum数据库外部的主体发起时，Greenplum数据库会为所有可审计事件记录用户名。</p>
    <p>Greenplum数据库通过只允许具有适当角色的管理员在日志文件上执行操作来防止对审计记录的未授权修改和删除。日志以一种使用逗号分隔值（CSV）的专有格式存储。每个Segment和Master都存储有自己的日志文件，不过这些都可以由管理员从远程访问。Greenplum数据库还通过<codeph>log_truncate_on_rotation</codeph>参数授权对旧日志文件的覆盖。这是一个本地参数并且必须在每个Segment和Master的配置文件中设置。</p>
      <p>Greenplum提供了一个名为<codeph>gp_toolkit</codeph>的管理方案，用户可以用它来查询日志文件、系统目录和操作环境得到系统状态信息。包括用法在内的更多信息，请参考<i>Greenplum数据库参考指南</i>中的<i>gp_tookit管理方案</i>附录。</p>
    <section>
      <title>查看数据库服务器的日志文件</title>
      <p>Greenplum数据库中的每一个数据库实例（Master和Segment）都是一个运行着的PostgreSQL数据库服务器，它们都有自己的服务器日志文件。每天的日志文件被创建在Master和每个Segment的数据目录下的<codeph>pg_log</codeph>目录中。</p>
      <p>服务器日志文件被写为逗号分隔值（CSV）格式。不是所有的日志项在所有的日志域中都有值。例如，只有与查询工作者进程相关的日志项才会有<codeph>slice_id</codeph>值。一个特定查询的相关日志项可以通过其会话标识符（<codeph>gp_session_id</codeph>）和命令标识符（<codeph>gp_command_count</codeph>）确定。</p>
      <table>
        <tgroup cols="0">
          <colspec colwidth="10*" align="left"/>
          <colspec colwidth="20*" align="left"/>
          <colspec colwidth="20*" align="left"/>
          <colspec colwidth="35*" align="left"/>
          <thead>
            <row>
              <entry>
                <p> # </p>
              </entry>
              <entry>
                <p> 域名 </p>
              </entry>
              <entry>
                <p> 数据类型 </p>
              </entry>
              <entry>
                <p> 描述 </p>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <p> 1 </p>
              </entry>
              <entry>
                <p> event_time </p>
              </entry>
              <entry>
                <p> timestamp with time zone </p>
              </entry>
              <entry>
                <p> 日志项被写到日志中的时间 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 2 </p>
              </entry>
              <entry>
                <p> user_name </p>
              </entry>
              <entry>
                <p> varchar(100) </p>
              </entry>
              <entry>
                <p> 数据库用户名 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 3 </p>
              </entry>
              <entry>
                <p> database_name </p>
              </entry>
              <entry>
                <p> varchar(100) </p>
              </entry>
              <entry>
                <p> 数据库名 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 4 </p>
              </entry>
              <entry>
                <p> process_id </p>
              </entry>
              <entry>
                <p> varchar(10) </p>
              </entry>
              <entry>
                <p> 系统进程ID（带前缀&quot;p&quot;） </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 5 </p>
              </entry>
              <entry>
                <p> thread_id </p>
              </entry>
              <entry>
                <p> varchar(50) </p>
              </entry>
              <entry>
                <p> 线程计数（带前缀&quot;th&quot;） </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 6 </p>
              </entry>
              <entry>
                <p> remote_host </p>
              </entry>
              <entry>
                <p> varchar(100) </p>
              </entry>
              <entry>
                <p> 在Master上，是客户端机器的主机名/地址。在Segment上，是Master的主机名/地址。</p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 7 </p>
              </entry>
              <entry>
                <p> remote_port </p>
              </entry>
              <entry>
                <p> varchar(10) </p>
              </entry>
              <entry>
                <p> Segment或Master的端口号 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 8 </p>
              </entry>
              <entry>
                <p> session_start_time </p>
              </entry>
              <entry>
                <p> timestamp with time zone </p>
              </entry>
              <entry>
                <p> 会话连接打开的时间 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 9 </p>
              </entry>
              <entry>
                <p> transaction_id </p>
              </entry>
              <entry>
                <p> int </p>
              </entry>
              <entry>
                <p> Master上的顶层事务ID。这个ID是任何子事务的父级。 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 10 </p>
              </entry>
              <entry>
                <p> gp_session_id </p>
              </entry>
              <entry>
                <p> text </p>
              </entry>
              <entry>
                <p> 会话标识符号（带前缀&quot;con&quot;）</p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 11 </p>
              </entry>
              <entry>
                <p> gp_command_count </p>
              </entry>
              <entry>
                <p> text </p>
              </entry>
              <entry>
                <p> 会话内部的命令编号（带前缀&quot;cmd&quot;）</p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 12 </p>
              </entry>
              <entry>
                <p> gp_segment </p>
              </entry>
              <entry>
                <p> text </p>
              </entry>
              <entry>
                <p> Segment内容标识符（对主Segment带前缀&quot;seg&quot;，镜像Segment带前缀&quot;mir&quot;）。Master的内容id总是-1。</p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 13 </p>
              </entry>
              <entry>
                <p> slice_id </p>
              </entry>
              <entry>
                <p> text </p>
              </entry>
              <entry>
                <p> 切片id（查询计划被执行的部分） </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 14 </p>
              </entry>
              <entry>
                <p> distr_tranx_id </p>
              </entry>
              <entry>
                <p> text </p>
              </entry>
              <entry>
                <p> 分布式事务ID </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 15 </p>
              </entry>
              <entry>
                <p> local_tranx_id </p>
              </entry>
              <entry>
                <p> text </p>
              </entry>
              <entry>
                <p> 本地事务ID </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 16 </p>
              </entry>
              <entry>
                <p> sub_tranx_id </p>
              </entry>
              <entry>
                <p> text </p>
              </entry>
              <entry>
                <p> 子事务ID </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 17 </p>
              </entry>
              <entry>
                <p> event_severity </p>
              </entry>
              <entry>
                <p> varchar(10) </p>
              </entry>
              <entry>
                <p> 值包括：LOG、ERROR、FATAL、PANIC、DEBUG1、DEBUG2 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 18 </p>
              </entry>
              <entry>
                <p> sql_state_code </p>
              </entry>
              <entry>
                <p> varchar(10) </p>
              </entry>
              <entry>
                <p> 与日志消息相关的SQL状态代码 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 19 </p>
              </entry>
              <entry>
                <p> event_message </p>
              </entry>
              <entry>
                <p> text </p>
              </entry>
              <entry>
                <p> 日志或者错误消息文本 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 20 </p>
              </entry>
              <entry>
                <p> event_detail </p>
              </entry>
              <entry>
                <p> text </p>
              </entry>
              <entry>
                <p> 与错误或者警告消息相关的详细消息文本 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 21 </p>
              </entry>
              <entry>
                <p> event_hint </p>
              </entry>
              <entry>
                <p> text </p>
              </entry>
              <entry>
                <p> 与错误或者警告消息相关的提示消息文本 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 22 </p>
              </entry>
              <entry>
                <p> internal_query </p>
              </entry>
              <entry>
                <p> text </p>
              </entry>
              <entry>
                <p> 内部产生的查询文本 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 23 </p>
              </entry>
              <entry>
                <p> internal_query_pos </p>
              </entry>
              <entry>
                <p> int </p>
              </entry>
              <entry>
                <p> 指向内部产生的查询文本中的光标 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 24 </p>
              </entry>
              <entry>
                <p> event_context </p>
              </entry>
              <entry>
                <p> text </p>
              </entry>
              <entry>
                <p> 产生消息的上下文 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 25 </p>
              </entry>
              <entry>
                <p> debug_query_string </p>
              </entry>
              <entry>
                <p> text </p>
              </entry>
              <entry>
                <p> 带有完整细节的用户提供的查询字符串，用于调试。这个字符串可能会由于内部使用而修改。</p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 26 </p>
              </entry>
              <entry>
                <p> error_cursor_pos </p>
              </entry>
              <entry>
                <p> int </p>
              </entry>
              <entry>
                <p> 指向查询字符串中的光标 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 27 </p>
              </entry>
              <entry>
                <p> func_name </p>
              </entry>
              <entry>
                <p> text </p>
              </entry>
              <entry>
                <p> 产生这个消息的函数 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 28 </p>
              </entry>
              <entry>
                <p> file_name </p>
              </entry>
              <entry>
                <p> text </p>
              </entry>
              <entry>
                <p> 产生消息的内部代码文件 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 29 </p>
              </entry>
              <entry>
                <p> file_line </p>
              </entry>
              <entry>
                <p> int </p>
              </entry>
              <entry>
                <p> 产生消息的内部代码文件的行号 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> 30 </p>
              </entry>
              <entry>
                <p> stack_trace </p>
              </entry>
              <entry>
                <p> text </p>
              </entry>
              <entry>
                <p> 与这个消息相关的栈跟踪文本 </p>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <p>Greenplum提供一个名为<codeph>gplogfilter</codeph>的工具，它能被用来在一个Greenplum数据库日志文件中搜索匹配指定条件的项。这个工具默认会搜索位于默认日志位置的Greenplum的Master日志文件。例如，要显示Master日志文件的最后三行：
        <codeblock>$ gplogfilter -n 3</codeblock></p>
      <p> 用户还可以通过<codeph>gpssh</codeph>工具运行<codeph>gplogfilter</codeph>来立刻搜索所有的Segment日志文件。例如，要显示每个Segment日志文件的最后三行：<codeblock>$ gpssh -f seg_host_file
  => source /usr/local/greenplum-db/greenplum_path.sh
  => gplogfilter -n 3 /gpdata/gp*/pg_log/gpdb*.csv</codeblock></p>
      <p> 下面是Greenplum与安全相关的审计（或者日志）服务器配置参数，它们可以在postgresql.conf配置文件中设置：</p>
      <table>
        <tgroup cols="0">
          <colspec colwidth="15*" align="left"/>
          <colspec colwidth="15*" align="left"/>
          <colspec colwidth="10*" align="left"/>
          <colspec colwidth="25*" align="left"/>
          <thead>
            <row>
              <entry>
                <p> 域名 </p>
              </entry>
              <entry>
                <p> 值范围 </p>
              </entry>
              <entry>
                <p> 默认 </p>
              </entry>
              <entry>
                <p> 描述 </p>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <p> log_connections </p>
              </entry>
              <entry>
                <p> Boolean </p>
              </entry>
              <entry>
                <p> off </p>
              </entry>
              <entry>
                <p> 这会对服务器日志输出一行详细描述每个成功的连接。某些客户端程序（如psql）在决定是否要求口令时会尝试连接两次，因此重复的“connection received”消息并非总是表示问题。</p>
              </entry>
            </row>
            <row>
              <entry>
                <p> log_disconnections </p>
              </entry>
              <entry>
                <p> Boolean </p>
              </entry>
              <entry>
                <p> off </p>
              </entry>
              <entry>
                <p> 在一个客户端会话终止时，这会在服务器日志中输出一行，其中会包括该会话的持续时间。 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> log_statement </p>
              </entry>
              <entry>
                <p> NONE </p>
                <p> DDL </p>
                <p> MOD </p>
                <p> ALL </p>
              </entry>
              <entry>
                <p> ALL </p>
              </entry>
              <entry>
                <p> 控制那些SQL语句会被记录。DDL记录所有数据定义命令，如CREATE、ALTER和DROP命令。MOD记录所有DDL语句外加INSERT、UPDATE、DELETE、TRUNCATE以及COPY FROM。如果PREPARE和EXPLAIN ANALYZE语句中如果包含有适当类型的命令，它们也会被日志记录。</p>
              </entry>
            </row>
            <row>
              <entry>
                <p> log_hostname </p>
              </entry>
              <entry>
                <p> Boolean </p>
              </entry>
              <entry>
                <p> off </p>
              </entry>
              <entry>
                <p> 连接日志消息默认只显示连接主机的IP地址。把这个选项打开会导致主机名也被记录。注意这依赖于用户的主机名解析设置，而且这有可能会带来不可忽视的性能损失。 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> log_duration </p>
              </entry>
              <entry>
                <p> Boolean </p>
              </entry>
              <entry>
                <p> off </p>
              </entry>
              <entry>
                <p> 致使每一个满足log_statement的完成语句的持续时间被记录。 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> log_error_verbosity </p>
              </entry>
              <entry>
                <p> TERSE </p>
                <p> DEFAULT </p>
                <p> VERBOSE </p>
              </entry>
              <entry>
                <p> DEFAULT </p>
              </entry>
              <entry>
                <p> 为被记录的每条消息控制写入到服务器日志的细节多少。</p>
              </entry>
            </row>
            <row>
              <entry>
                <p> log_min_duration_statement </p>
              </entry>
              <entry>
                <p> number of milliseconds, 0, -1 </p>
              </entry>
              <entry>
                <p> -1 </p>
              </entry>
              <entry>
                <p> 如果语句的持续时间大于等于指定的毫秒数，则在一个日志行中记录该语句和它的持续时间。将这个参数设置为0将打印出所有的语句及其持续时间。-1禁用这一特性。例如，如果用户将它设置为250，那么所有运行时间大于等于250ms的SQL语句将被记录。在跟踪应用中的未优化查询时，启用这一选项非常有用。 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> log_min_messages </p>
              </entry>
              <entry>
                <p> DEBUG5 </p>
                <p> DEBUG4 </p>
                <p> DEBUG3 </p>
                <p> DEBUG2 </p>
                <p> DEBUG1 </p>
                <p> INFO </p>
                <p> NOTICE </p>
                <p> WARNING </p>
                <p> ERROR </p>
                <p> LOG </p>
                <p> FATAL </p>
                <p> PANIC </p>
              </entry>
              <entry>
                <p> NOTICE </p>
              </entry>
              <entry>
                <p> 控制哪些消息级别会被写入到服务器日志。每个级别包括其后的所有级别。级别越靠后，发送到日志的消息就越少。</p>
              </entry>
            </row>
            <row>
              <entry>
                <p>log_rotation_size</p>
              </entry>
              <entry>0 - INT_MAX/1024 kilobytes</entry>
              <entry>1048576</entry>
              <entry>
                <p>大于0时，将这个千字节数写入日志后，将创建一个新的日志文件。设置为零可禁用基于大小的新日志文件的创建。 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> log_rotation_age </p>
              </entry>
              <entry>
                <p> Any valid time expression (number and unit) </p>
              </entry>
              <entry>
                <p> 1d </p>
              </entry>
              <entry>
                <p> 决定个体日志文件的最大生存时间。在这个时间过去之后，一个新的日志文件将被创建。设置为零可禁用新日志文件基于时间创建。</p>
              </entry>
            </row>
            <row>
              <entry>
                <p> log_statement_stats </p>
              </entry>
              <entry>
                <p> Boolean </p>
              </entry>
              <entry>
                <p> off </p>
              </entry>
              <entry>
                <p> 对每个查询，写入查询解析器、规划器和执行器的整体性能统计信息到服务器日志中。这是一种粗糙的画像手段。 </p>
              </entry>
            </row>
            <row>
              <entry>
                <p> log_truncate_on_rotation </p>
              </entry>
              <entry>
                <p> Boolean </p>
              </entry>
              <entry>
                <p> off </p>
              </entry>
              <entry>
                <p> 截断（重写）而不是追加到任何现存的同名日志文件。仅当一个新文件由于基于时间的轮转而被打开时，截断才会发生。例如，使用这个设置配合gpseg#-%H.log这样的log_filename会导致产生24个每小时的日志文件，然后循环地重写它们。关闭这一设置时，预先已经存在的文件在所有的情况下都会被追加内容。</p>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
  </body>
</topic>
