<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_lv4_czp_fz">
  <title>dblink</title>
  <body>
    <p><codeph>dblink</codeph>模块支持从数据库会话中连接到其他Greenplum数据库数据库。
        这些数据库可以驻留在相同的Greenplum数据库系统中，也可以驻留在远程系统中。
        </p>
      <p>Greenplum数据库支持Greenplum数据库安装中具有相同主要版本号的数据库之间的<codeph>dblink</codeph>连接。
          您还可以使用<codeph>dblink</codeph>连接到使用兼容<codeph>libpq</codeph>库的其他Greenplum数据库安装。
          </p>
      <note><codeph>dblink</codeph>适用于数据库用户在其他数据库中执行简短的临时查询。
          <codeph>dblink</codeph>不能替代外部表或<codeph>gpcopy</codeph>之类的管理工具。
          </note>
    <p>Greenplum数据库<codeph>dblink</codeph>模块是PostgreSQL <codeph>dblink</codeph>模块的修改版本。
        在Greenplum数据库中使用该模块时，存在一些限制。
        </p>
  </body>
  <topic id="topic_reg">
    <title>安装和注册模块</title>
    <body>
      <p>当您安装Greenplum数据库时，将安装<codeph>dblink</codeph>模块。
          在使用模块中定义的任何函数之前，必须在要使用这些函数的每个数据库中注册<codeph>dblink</codeph>扩展。
        <ph otherprops="pivotal">Refer to <xref href="../../install_guide/install_modules.xml"
          format="dita" scope="peer">Installing Additional Supplied Modules</xref>
        for more information.</ph></p>
    </body>
  </topic>
  <topic id="topic_mpp">
    <title>Greenplum数据库注意事项</title>
    <body>
      <p>在此版本的Greenplum数据库中，修改表数据的语句不能使用命名或隐式<codeph>dblink</codeph>连接。
          而是必须直接在<codeph>dblink()</codeph>函数中提供连接字符串。例如：
          <codeblock>gpadmin=# <b>CREATE TABLE testdbllocal (a int, b text) DISTRIBUTED BY (a);</b>
CREATE TABLE
gpadmin=# <b>INSERT INTO testdbllocal select * FROM dblink('dbname=postgres', 'SELECT * FROM testdblink') AS dbltab(id int, product text);</b>
INSERT 0 2</codeblock></p>
      <p><codeph>dblink</codeph>的Greenplum数据库版本禁用以下异步函数：
          <ul id="ul_ajr_lsm_bdb">
          <li><codeph>dblink_send_query()</codeph></li>
          <li><codeph>dblink_is_busy()</codeph></li>
          <li><codeph>dblink_get_result()</codeph></li>
        </ul></p>
    </body>
  </topic>
  <topic id="topic_using">
    <title>使用dblink</title>
    <body>
      <p>以下过程确定了在Greenplum数据库中配置和使用<codeph>dblink</codeph>的基本步骤。
          这些示例使用<codeph>dblink_connect()</codeph>创建与数据库的连接，并使用<codeph>dblink()</codeph>执行SQL查询。
          </p>
      <ol id="ol_axw_csm_bdb">
        <li>首先创建一个示例表以使用<codeph>dblink</codeph>函数进行查询。
            这些命令在<codeph>postgres</codeph>数据库中创建一个小表，稍后您将使用<codeph>dblink</codeph>从<codeph>testdb</codeph>数据库中查询该表：
            <codeblock>$ <b>psql -d postgres</b>
psql (9.4.20)
Type "help" for help.

postgres=# <b>CREATE TABLE testdblink (a int, b text) DISTRIBUTED BY (a);</b>
CREATE TABLE
postgres=# <b>INSERT INTO testdblink VALUES (1, 'Cheese'), (2, 'Fish');</b>
INSERT 0 2
postgres=# <b>\q
</b>$</codeblock></li>
        <li>以超级用户身份登录到另一个数据库。
            在此示例中，超级用户<codeph>gpadmin</codeph>登录到数据库<codeph>testdb</codeph>。
            如果<codeph>dblink</codeph>函数尚不可用，请在数据库中注册<codeph>dblink</codeph>扩展：
            <codeblock>$ <b>psql -d testdb</b>
psql (9.4beta1)
Type "help" for help.

testdb=# <b>CREATE EXTENSION dblink</b>;
CREATE EXTENSION</codeblock></li>
        <li>使用<codeph>dblink_connect()</codeph>函数创建与另一个数据库的隐式或命名连接。
            您提供的连接字符串应该是<codeph>libpq</codeph>样式的关键字/值字符串。
            本示例创建一个名为<codeph>mylocalconn</codeph>的连接到本地Greenplum数据库系统上的<codeph>postgres</codeph>数据库：
            <codeblock>testdb=# <b>SELECT dblink_connect('mylocalconn', 'dbname=postgres user=gpadmin');</b>
 dblink_connect
----------------
 OK
(1 row)</codeblock>
          <note>如果未指定<codeph>user</codeph>，则在启动Greenplum数据库时，<codeph>dblink_connect()</codeph>将使用<codeph>PGUSER</codeph>环境变量的值。
              如果未设置<codeph>PGUSER</codeph>，则默认值为启动Greenplum数据库的系统用户。
              </note></li>
        <li>使用<codeph>dblink()</codeph>函数可使用已配置的连接查询数据库。
            请记住，此函数返回记录类型，因此您必须分配<codeph>dblink()</codeph>查询中返回的列。
            例如，以下命令使用命名连接来查询您先前创建的表：
            <codeblock>testdb=# <b>SELECT * FROM dblink('mylocalconn', 'SELECT * FROM testdblink') AS dbltab(id int, product text);</b>
 id | product
----+---------
  1 | Cheese
  2 | Fish
(2 rows)</codeblock></li>
      </ol>
      <p>要以另一个用户身份连接到本地数据库，请在连接字符串中指定该用户。
          本示例以用户<codeph>test_user</codeph>的身份连接到数据库。
          使用<codeph>dblink_connect()</codeph>，超级用户无需指定密码即可创建与另一个本地数据库的连接。
          </p>
      <codeblock>testdb=# <b>SELECT dblink_connect('localconn2', 'dbname=postgres user=test_user');</b></codeblock>
      <p>要建立与远程数据库系统的连接，请在连接字符串中包含主机和密码信息。
          例如，要创建到远程系统的隐式<codeph>dblink</codeph>连接：
          <codeblock>testdb=# <b>SELECT dblink_connect('host=remotehost port=5432 dbname=postgres user=gpadmin password=secret');</b></codeblock></p>
      <section id="dblink_u">
        <title>作为非超级用户使用dblink</title>
        <p>要使用<codeph>dblink_connect()</codeph>与数据库建立连接，非超级用户必须在连接字符串中包含主机，用户和密码信息。
            即使连接到本地数据库，也必须包括主机，用户和密码信息。
            例如，用户<codeph>test_user</codeph>可以使用以下命令创建到本地系统<codeph>mdw</codeph>的<codeph>dblink</codeph>连接：
          <codeblock>testdb=> <b>SELECT dblink_connect('host=mdw port=5432 dbname=postgres user=test_user password=secret');</b></codeblock></p>
        <p>如果非超级用户需要创建不需要密码的<codeph>dblink</codeph>连接，则可以使用<codeph>dblink_connect_u()</codeph>函数。
            <codeph>dblink_connect_u()</codeph>函数与<codeph>dblink_connect()</codeph>相同，区别在于它允许非超级用户创建不需要密码的连接。
            </p>
        <p>最初安装<codeph>dblink_connect_u()</codeph>时，它具有从<codeph>PUBLIC</codeph>撤消的所有特权，因此除超级用户外，它无法调用。
            在某些情况下，将<codeph>dblink_connect_u()</codeph>的<codeph>EXECUTE</codeph>权限授予被认为可信任的特定用户可能是适当的，但是应格外小心。
          </p>
        <note type="warning">如果Greenplum数据库系统为用户配置了不涉及密码的身份验证方法，
            那么当非超级用户执行<codeph>dblink_connect_u()</codeph>时，可能会冒充他人，并随后升级特权。
            <codeph>dblink</codeph>连接似乎源自该函数指定的用户。
            例如，非超级用户可以执行<codeph>dblink_connect_u()</codeph>并指定使用<codeph>trust</codeph>认证配置的用户。
            <p>同样，即使<codeph>dblink</codeph>连接需要密码，也可以从服务器环境中提供该密码，例如属于服务器用户的<codeph>~/.pgpass</codeph>文件。
                建议所有属于服务器用户的<codeph>~/.pgpass</codeph>文件都不要包含任何指定通配符主机名的记录。
                </p></note>
        <ol id="ol_dpt_ll3_5fb">
          <li>作为超级用户，对用户数据库中的<codeph>dblink_connect_u()</codeph>函数授予<codeph>EXECUTE</codeph>特权。
              本示例向具有创建隐式或命名<codeph>dblink</codeph>连接的签名的函数的非超级用户<codeph>test_user</codeph>授予特权。
              <codeblock>testdb=# <b>GRANT EXECUTE ON FUNCTION dblink_connect_u(text) TO test_user;</b>
testdb=# <b>GRANT EXECUTE ON FUNCTION dblink_connect_u(text, text) TO test_user;</b></codeblock></li>
          <li>现在，<codeph>test_user</codeph>无需密码即可创建到另一个本地数据库的连接。
              例如，<codeph>test_user</codeph>可以登录到<codeph>testdb</codeph>数据库并执行此命令以创建一个名为testconn的连接到本地<codeph>postgres</codeph>数据库。
              <codeblock>testdb=> <b>SELECT dblink_connect_u('testconn', 'dbname=postgres user=test_user');</b></codeblock>
            <note>如果未指定<codeph>user</codeph>，则在启动Greenplum数据库时，<codeph>dblink_connect_u()</codeph>将使用<codeph>PGUSER</codeph>环境变量的值。
                如果未设置<codeph>PGUSER</codeph>，则默认值为启动Greenplum数据库的系统用户。
                </note></li>
          <li><codeph>test_user</codeph>可以使用<codeph>dblink()</codeph>函数通过<codeph>dblink</codeph>连接执行查询。
              例如，此命令使用在上一步中创建的名为<codeph>testconn</codeph>的<codeph>dblink</codeph>连接。
              <codeph>test_user</codeph>必须具有对该表的适当访问权限。
              <codeblock>testdb=> <b>SELECT * FROM dblink('testconn', 'SELECT * FROM testdblink') AS dbltab(id int, product text);</b></codeblock></li>
        </ol>
      </section>
    </body>
  </topic>
  <topic id="topic_info">
    <title>附加模块文档</title>
    <body>
      <p>有关此模块中各个函数的详细信息，请参考PostgreSQL文档中的<xref href="https://www.postgresql.org/docs/9.4/dblink.html" format="html" scope="external">dblink</xref>。
          </p>
    </body>
  </topic>
</topic>
