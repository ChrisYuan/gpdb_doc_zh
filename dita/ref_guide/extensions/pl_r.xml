<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1" xml:lang="en">
  <title id="py212122">Greenplum PL/R 语言扩展</title>
  <body>
    <p>本章包含以下信息：</p>
    <ul>
      <li id="py213657">
        <xref href="#topic2" type="topic" format="dita"/>
      </li>
      <li id="py219391" otherprops="pivotal">
        <xref href="#topic3" type="topic" format="dita"/>
      </li>
      <li id="py214876" otherprops="pivotal">
        <xref href="#topic6" type="topic" format="dita"/>
      </li>
      <li>
        <xref href="#topic5" format="dita"/></li>
      <li id="py217384">
        <xref href="#topic9" type="topic" format="dita"/>
      </li>
      <li id="py213665">
        <xref href="#topic13" type="topic" format="dita"/>
      </li>
      <li id="py219064">
        <xref href="#topic14" type="topic" format="dita"/>
      </li>
      <li><xref href="#topic_g12_gwt_3gb" format="dita"/></li>
      <li id="py217165">
        <xref href="#topic15" type="topic" format="dita"/>
      </li>
    </ul>
  </body>
  <topic xml:lang="en" id="topic2">
    <title>关于Greenplum数据库PL/R</title>
    <body>
      <p>PL/R是一种过程式语言。
        使用Greenplum数据库PL/R扩展，您可以使用R编程语言编写数据库函数，并使用包含R函数和数据集的R包。
        </p>
      <p>有关支持的PL/R版本的信息，请参阅<cite>Greenplum数据库发行说明</cite>。
        </p>
    </body>
    <topic id="topic3" xml:lang="en" otherprops="pivotal">
      <title id="py217167">Installing PL/R</title>
      <body>
        <p otherprops="pivotal">The PL/R extension is available as a package. Download the package
          from <xref href="https://network.pivotal.io/products/pivotal-gpdb" format="html"
            scope="external">Pivotal Network</xref> and install it with the Greenplum Package
          Manager (<codeph>gppkg</codeph>). </p>
        <p>The <codeph>gppkg</codeph> utility installs Greenplum Database extensions, along with any
          dependencies, on all hosts across a cluster. It also automatically installs extensions on
          new hosts in the case of system expansion and segment recovery.</p>
        <p>For information about <codeph>gppkg</codeph>, see the <cite>Greenplum Database Utility
            Guide</cite>.</p>
      </body>
      <topic id="topic4" xml:lang="en">
        <title>Installing the Extension Package</title>
        <body>
          <p>Before you install the PL/R extension, make sure that your Greenplum Database is
            running, you have sourced <codeph>greenplum_path.sh</codeph>, and that the
              <codeph>$MASTER_DATA_DIRECTORY</codeph> and <codeph>$GPHOME</codeph> variables are
            set.</p>
          <ol id="ol_nxv_ql2_4p">
            <li id="py213681" otherprops="pivotal">Download the PL/R extension package from <xref
                href="https://network.pivotal.io/products/pivotal-gpdb" format="html"
                scope="external">Pivotal Network</xref>.</li>
            <li>Copy the PL/R package to the Greenplum Database master host. </li>
            <li id="py214844">Install the software extension package by running the
                <codeph>gppkg</codeph> command. This example installs the PL/R extension on a Linux
              system:<codeblock>$ gppkg -i plr-2.3.1-gp5-rhel6-x86_64.gppkg</codeblock></li>
            <li id="py215420">Restart the database.<codeblock>$ gpstop -r</codeblock></li>
            <li id="py215434">Source the file <codeph>$GPHOME/greenplum_path.sh</codeph>.</li>
          </ol>
          <p>The extension and the R environment is installed in this directory:</p>
          <codeblock>$GPHOME/ext/R-3.3.3/</codeblock>
          <note type="note">The version of some shared libraries installed with the operating system
            might not be compatible with the Greenplum Database PL/R extension. <p>If a shared
              library is not compatible, edit the file <codeph>$GPHOME/greenplum_path.sh</codeph> in
              all Greenplum Database master and segment hosts and set environment variable
                <codeph>LD_LIBRARY_PATH </codeph>to specify the location that is installed with the
              PL/R extension.
            </p><codeblock>export <i>LD_LIBRARY_PATH= 
   $GPHOME/ext/R-3.3.3/lib:$LD_LIBRARY_PATH</i></codeblock></note>
        </body>
      </topic>
    </topic>
    <topic id="topic5" xml:lang="en">
      <title>启用PL/R语言支持</title>
      <body>
        <p>对于需要使用它的每个数据库，使用SQL命令<codeph>CREATE EXTENSION</codeph>注册PL/R语言。
          由于PL/R是不可信的语言，因此只有超级用户才能将PL/R注册到数据库。
          例如，以<codeph>gpadmin</codeph>用户身份运行此命令，以使用名为<codeph>testdb</codeph>的数据库注册语言：
          </p>
        <codeblock>$ psql -d testdb -c 'CREATE EXTENSION plr;'</codeblock>
        <p>PL/R注册为不受信任的语言。</p>
      </body>
    </topic>
    <topic id="topic6" xml:lang="en" otherprops="pivotal">
      <title id="py213692">Uninstalling PL/R</title>
      <body>
        <ul id="ul_mhq_rl2_4p">
          <li id="py216937">
            <xref href="#topic7" type="topic" format="dita"/>
          </li>
          <li id="py216956">
            <xref href="#topic8" type="topic" format="dita"/>
          </li>
        </ul>
        <p>When you remove PL/R language support from a database, the PL/R routines that you created
          in the database will no longer work. </p>
      </body>
      <topic id="topic7" xml:lang="en">
        <title id="py216910">Remove PL/R Support for a Database</title>
        <body>
          <p>For a database that no longer requires the PL/R language, remove support for PL/R with
            the SQL command <codeph>DROP EXTENSION</codeph>. Because PL/R is an untrusted language,
            only superusers can remove support for the PL/R language from a database. For example,
            run this command as the <codeph>gpadmin</codeph> user to remove support for PL/R from
            the database named <codeph>testdb</codeph>:</p>
          <codeblock>$ psql -d testdb -c 'DROP EXTENSION plr;'</codeblock>
          <p> The default command fails if any existing objects (such as functions) depend on the
            language. Specify the <codeph>CASCADE</codeph> option to also drop all dependent
            objects, including functions that you created with PL/R. </p>
        </body>
      </topic>
      <topic id="topic8" xml:lang="en">
        <title id="py216924">Uninstall the Extension Package</title>
        <body>
          <p>If no databases have PL/R as a registered language, uninstall the Greenplum PL/R
            extension with the <codeph>gppkg</codeph> utility. This example uninstalls PL/R package
            version 2.3.1</p>
          <codeblock>$ gppkg -r plr-2.3.1</codeblock>
          <p>You can run the <codeph>gppkg</codeph> utility with the options <codeph>-q
              --all</codeph> to list the installed extensions and their versions.</p>
          <p>Restart the database.</p>
          <codeblock>$ gpstop -r</codeblock>
        </body>
      </topic>
    </topic>
    <topic id="topic9" xml:lang="en">
      <title id="py214084">示例</title>
      <body>
        <p>以下是简单的PL/R示例。</p>
      </body>
      <topic id="topic10" xml:lang="en">
        <title>示例1：将PL/R用于单行运算符</title>
        <body>
          <p>此函数使用R函数<codeph>rnorm()</codeph>生成具有正态分布的数字数组。
            </p>
          <codeblock>CREATE OR REPLACE FUNCTION r_norm(n integer, mean float8, 
  std_dev float8) RETURNS float8[ ] AS
$$
  x&lt;-rnorm(n,mean,std_dev)
  return(x)
$$
LANGUAGE 'plr';</codeblock>
          <p>以下CREATE TABLE命令使用r_norm函数填充表。
            r_norm函数创建一个包含10个数字的数组。
            </p>
          <codeblock>CREATE TABLE test_norm_var
  AS SELECT id, r_norm(10,0,1) as x
  FROM (SELECT generate_series(1,30:: bigint) AS ID) foo
  DISTRIBUTED BY (id);</codeblock>
        </body>
      </topic>
      <topic id="topic11" xml:lang="en">
        <title>示例2：以表格形式返回PL/R data.frames</title>
        <body>
          <p>假设您的PL/R函数返回R <codeph>data.frame</codeph>作为其输出，
            除非您想使用数组数组，否则需要做一些工作才能将PL/R中的<codeph>data.frame</codeph>看作一个简单的SQL表：
            </p>
          <ul id="ul_dsh_tl2_4p">
            <li id="py213770">在Greenplum数据库中创建一个与R <codeph>data.frame</codeph>具有相同尺寸的<codeph>TYPE</codeph>：
              <codeblock>CREATE TYPE t1 AS ...</codeblock></li>
            <li id="py213772">定义PL/R函数时使用此<codeph>TYPE</codeph>
              <codeblock>... RETURNS SET OF t1 AS ...</codeblock></li>
          </ul>
          <p>下一个示例给出了示例SQL。</p>
        </body>
      </topic>
      <topic id="topic12" xml:lang="en">
        <title>示例3：使用PL/R的分层回归</title>
        <body>
          <p>下面的SQL定义了一个<codeph>TYPE</codeph>并使用PL/R运行层次回归：
            </p>
          <codeblock>--Create TYPE to store model results
DROP TYPE IF EXISTS wj_model_results CASCADE;
CREATE TYPE wj_model_results AS (
  cs text, coefext float, ci_95_lower float, ci_95_upper float,
  ci_90_lower float, ci_90_upper float, ci_80_lower float,
  ci_80_upper float);

--Create PL/R function to run model in R
DROP FUNCTION IF EXISTS wj_plr_RE(float [ ], text [ ]);
CREATE FUNCTION wj_plr_RE(response float [ ], cs text [ ])
RETURNS SETOF wj_model_results AS
$$
  library(arm)
  y&lt;- log(response)
  cs&lt;- cs
  d_temp&lt;- data.frame(y,cs)
  m0 &lt;- lmer (y ~ 1 + (1 | cs), data=d_temp)
  cs_unique&lt;- sort(unique(cs))
  n_cs_unique&lt;- length(cs_unique)
  temp_m0&lt;- data.frame(matrix0,n_cs_unique, 7))
  for (i in 1:n_cs_unique){temp_m0[i,]&lt;-
    c(exp(coef(m0)$cs[i,1] + c(0,-1.96,1.96,-1.65,1.65,
      -1.28,1.28)*se.ranef(m0)$cs[i]))}
  names(temp_m0)&lt;- c("Coefest", "CI_95_Lower",
    "CI_95_Upper", "CI_90_Lower", "CI_90_Upper",
   "CI_80_Lower", "CI_80_Upper")
  temp_m0_v2&lt;- data.frames(cs_unique, temp_m0)
  return(temp_m0_v2)
$$
LANGUAGE 'plr';

--Run modeling plr function and store model results in a 
--table
DROP TABLE IF EXISTS wj_model_results_roi;
CREATE TABLE wj_model_results_roi AS SELECT * 
  FROM wj_plr_RE((SELECT wj_droi2_array),
  (SELECT cs FROM wj_droi2_array));</codeblock>
        </body>
      </topic>
    </topic>
    <topic id="topic13" xml:lang="en">
      <title id="py218988">下载和安装R包</title>
      <body>
        <p>R包是包含R函数和数据集的模块。
          您可以安装R软件包以扩展Greenplum数据库中的R和PL/R功能。
          </p>
        <p otherprops="pivotal">Greenplum Database provides a collection of data science-related R
          libraries that can be used with the Greenplum Database PL/R language. You can download
          these libraries in <codeph>.gppkg</codeph> format from <xref
            href="https://network.pivotal.io/products/pivotal-gpdb" format="html" scope="external"
            >Pivotal Network</xref>. For information about the libraries, see <xref scope="peer"
            type="topic" format="dita" href="../../install_guide/install_r_dslib.xml#topic1">R Data
            Science Library Package</xref>.</p>
        <note type="note">如果扩容Greenplum数据库并添加segment主机，则必须在新主机的R安装中安装R软件包。
          I</note>
        <ol id="ol_bjw_tl2_4p">
          <li id="py218997">对于R包，标识所有相关R包和每个包Web URL。
            通过从以下导航页面中选择给定的包，可以找到该信息：
            <p><xref
                href="https://cran.r-project.org/web/packages/available_packages_by_name.html"
                format="html" scope="external"/></p>
            <p>例如，R包arm的页面表明该包需要以下R库：Matrix，lattice，lme4，R2WinBUGS，coda，abind，foreign和MASS。
              </p>
            <p>您还可以尝试使用<codeph>R CMD INSTALL</codeph>命令安装软件包以确定依赖软件包。
              </p>
            <p>对于Greenplum数据库PL/R扩展中包含的R安装，所需的R软件包随PL/R扩展一起安装。
              但是，Matrix包需要更新的版本。
              </p></li>
          <li id="py219006">从命令行，使用<codeph>wget</codeph>实用程序将arm包的<codeph>tar.gz</codeph>文件下载到Greenplum数据库master主机：
            <codeblock>wget https://cran.r-project.org/src/contrib/Archive/arm/arm_1.5-03.tar.gz</codeblock><codeblock>wget https://cran.r-project.org/src/contrib/Archive/Matrix/Matrix_0.9996875-1.tar.gz</codeblock></li>
          <li id="py219012">使用<codeph>gpscp</codeph>实用程序和<codeph>hosts_all</codeph>文件将<codeph>tar.gz</codeph>文件复制到Greenplum数据库集群的所有节点上的同一目录。
            <codeph>hosts_all</codeph>文件包含所有Greenplum数据库segment主机的列表。
            您可能需要root访问权限才能执行此操作。
            <codeblock>gpscp -f hosts_all Matrix_0.9996875-1.tar.gz =:/home/gpadmin </codeblock><codeblock>gpscp -f /hosts_all arm_1.5-03.tar.gz =:/home/gpadmin</codeblock></li>
          <li id="py219020">在交互模式下使用<codeph>gpssh</codeph>实用程序登录每个Greenplum数据库segment主机（<codeph>gpssh -f all_hosts</codeph>）。
            使用<codeph>R CMD INSTALL</codeph>命令从命令提示符安装软件包。
            请注意，这可能需要root访问权限。
            例如，此R install命令安装arm包的包。
            <codeblock>$R_HOME/bin/R CMD INSTALL Matrix_0.9996875-1.tar.gz   arm_1.5-03.tar.gz</codeblock></li>
          <li id="py219023">确保软件包安装在所有segment的<codeph>$R_HOME/library</codeph>目录中（<codeph>gpssh</codeph>可用于安装软件包）。
            例如，此<codeph>gpssh</codeph>命令列出R库目录的内容。
            <codeblock>gpssh -s -f all_hosts "ls $R_HOME/library"</codeblock>
            <p><codeph>gpssh</codeph>选项<codeph>-s</codeph>在远程主机上运行命令之前获取<codeph>greenplum_path.sh</codeph>文件。
            </p></li>
          <li id="py219025">测试是否可以加载R包。
            <p>如果可以加载R包，则此函数执行简单测试：</p>
            <codeblock>CREATE OR REPLACE FUNCTION R_test_require(fname text)
RETURNS boolean AS
$BODY$
    return(require(fname,character.only=T))
$BODY$
LANGUAGE 'plr';</codeblock>
            <p>此SQL命令检查是否可以加载R包arm：
              </p><codeblock>SELECT R_test_require('arm');</codeblock></li>
        </ol>
      </body>
    </topic>
    <topic id="topic14" xml:lang="en">
      <title id="py217297">显示R库信息</title>
      <body>
        <p>您可以使用R命令行显示有关Greenplum数据库主机上已安装的库和函数的信息。
          您还可以在R安装中添加和删除库。
          要在主机上启动R命令行，请以<codeph>gadmin</codeph>用户身份登录主机，
          并从<codeph>$GPHOME/ext/R-3.3.3/bin</codeph>目录运行脚本R。
          </p>
        <p>此R函数列出R命令行中的可用R包：</p>
        <codeblock>&gt; library()</codeblock>
        <p>显示特定R包的文档</p>
        <codeblock>&gt; library(help="<varname>package_name</varname>")
&gt; help(package="<varname>package_name</varname>")</codeblock>
        <p>显示R函数的帮助文件：</p>
        <codeblock>&gt; help("<varname>function_name</varname>")
&gt; ?<varname>function_name</varname></codeblock>
        <p>要查看已安装的软件包，请使用R命令<codeph>installed.packages()</codeph>。
          这将返回一个矩阵，其中包含已安装的每个包的行。
          下面，我们来看看这个矩阵的前5行。
          </p>
        <codeblock>&gt; installed.packages()</codeblock>
        <p>必须先安装并加载任何未出现在已安装的软件包矩阵中的软件包，然后才能使用其函数。
          </p>
        <p>可以使用<codeph>install.packages()</codeph>安装R包：
          </p>
        <codeblock>&gt; install.packages("<varname>package_name</varname>") 
&gt; install.packages("mypkg", dependencies = TRUE, type="source")</codeblock>
        <p>从R命令行加载包。
          <codeblock>&gt; library(" <varname>package_name</varname> ") </codeblock></p>
        <p>可以使用<codeph>remove.packages</codeph>删除R包</p>
        <codeblock>&gt; remove.packages("<varname>package_name</varname>")</codeblock>
        <p>您可以使用R命令<codeph>-e</codeph>选项从命令行运行函数。
          例如，此命令在R包MASS上显示帮助。
          </p>
        <codeblock>$ R -e 'help("MASS")'</codeblock>
      </body>
    </topic>
    <topic id="topic_g12_gwt_3gb">
      <title>在启动时加载R模块</title>
      <body>
        <p>PL/R可以在解释器初始化期间自动加载保存的R代码。
          要使用此功能，请创建<codeph>plr_modules</codeph>数据库表，然后将要自动加载的R模块插入表中。
          如果表存在，PL/R会将其包含的代码加载到解释器中。
          </p>
        <p>在Greenplum数据库系统中，表行通常是分布式的，因此每行只存在于一个segment实例中。
          但是，每个segment实例的R解释器需要加载所有模块，因此正态分布的表将不起作用。
          必须将<codeph>plr_modules</codeph>表创建为默认架构中的复制表，以便表中的所有行都出现在每个segment实例中。
          例如：
          </p>
        <codeblock>CREATE TABLE public.plr_modules {
  modseq int4,
  modsrc text
) DISTRIBUTED REPLICATED;</codeblock>
        <p>有关使用PL/R自动加载功能的更多信息，请参阅
          <xref href="https://www.joeconway.com/plr/doc/plr-module-funcs.html" format="html"
            scope="external"/>。</p>
      </body>
    </topic>
    <topic id="topic15" xml:lang="en">
      <title id="py216497">参考</title>
      <body>
        <p><xref href="https://www.r-project.org/" scope="external" format="html"
            >https://www.r-project.org/</xref> - R Project主页</p>
        <p><xref href="https://cran.r-project.org/web/packages/PivotalR/" format="html"
            scope="external">https://cran.r-project.org/web/packages/PivotalR/</xref> -
          PivotalR的主页，提供了一个R接口，用于对Greenplum数据库表和视图进行操作，类似于R <cmdname>data.frame</cmdname>。
          PivotalR还支持直接从R使用机器学习包<xref href="https://madlib.apache.org/"
                                      format="html" scope="external">MADlib</xref>。
          </p>
        <p>R文档随Greenplum R软件包一起安装：</p>
        <p>
          <codeph>$GPHOME/ext/R-3.3.3/doc</codeph>
        </p>
      </body>
      <topic id="topic16" xml:lang="en">
        <title>R函数和参数</title>
        <body>
          <ul id="ul_yky_5l2_4p">
            <li id="py214453">参考<xref href="https://www.joeconway.com/doc/plr-funcs.html"
                scope="external" format="html"
              >https://www.joeconway.com/doc/plr-funcs.html</xref></li>
          </ul>
        </body>
      </topic>
      <topic id="topic17" xml:lang="en">
        <title>在R中传递数据值</title>
        <body>
          <ul id="ul_fly_5l2_4p">
            <li id="py214456">参考<xref href="https://www.joeconway.com/doc/plr-data.html"
                scope="external" format="html"
              >https://www.joeconway.com/doc/plr-data.html</xref></li>
          </ul>
        </body>
      </topic>
      <topic id="topic18" xml:lang="en">
        <title>R中的聚合函数</title>
        <body>
          <ul id="ul_jly_5l2_4p">
            <li id="py214459">参考<xref
                href="https://www.joeconway.com/doc/plr-aggregate-funcs.html" scope="external"
                format="html">https://www.joeconway.com/doc/plr-aggregate-funcs.html</xref></li>
          </ul>
        </body>
      </topic>
    </topic>
  </topic>
</topic>
