<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
  <title id="cw20941">ALTER EXTENSION</title>
  <body>
    <p id="sql_command_desc">更改在Greenplum数据库中注册的扩展的定义。</p>
    <section id="section2">
      <title>概要</title>
      <codeblock id="sql_command_synopsis">ALTER EXTENSION <varname>name</varname> UPDATE [ TO <varname>new_version</varname> ]
ALTER EXTENSION <varname>name</varname> SET SCHEMA <varname>new_schema</varname>
ALTER EXTENSION <varname>name</varname> ADD <varname>member_object</varname>
ALTER EXTENSION <varname>name</varname> DROP <varname>member_object</varname>

where <varname>member_object</varname> is:

  ACCESS METHOD <varname>object_name</varname> |
  AGGREGATE <varname>aggregate_name</varname> ( <varname>aggregate_signature</varname> ) |
  CAST (<varname>source_type</varname> AS <varname>target_type</varname>) |
  COLLATION <varname>object_name</varname> |
  CONVERSION <varname>object_name</varname> |
  DOMAIN <varname>object_name</varname> |
  EVENT TRIGGER <varname>object_name</varname> |
  FOREIGN DATA WRAPPER <varname>object_name</varname> |
  FOREIGN TABLE <varname>object_name</varname> |
  FUNCTION <varname>function_name</varname> ( [ [ <varname>argmode</varname> ] [ <varname>argname</varname> ] <varname>argtype</varname> [, ...] ] ) |
  MATERIALIZED VIEW <varname>object_name</varname> |
  OPERATOR <varname>operator_name</varname> (<varname>left_type</varname>, <varname>right_type</varname>) |
  OPERATOR CLASS <varname>object_name</varname> USING <varname>index_method</varname> |
  OPERATOR FAMILY <varname>object_name</varname> USING <varname>index_method</varname> |
  [ PROCEDURAL ] LANGUAGE <varname>object_name</varname> |
  SCHEMA <varname>object_name</varname> |
  SEQUENCE <varname>object_name</varname> |
  SERVER <varname>object_name</varname> |
  TABLE <varname>object_name</varname> |
  TEXT SEARCH CONFIGURATION <varname>object_name</varname> |
  TEXT SEARCH DICTIONARY <varname>object_name</varname> |
  TEXT SEARCH PARSER <varname>object_name</varname> |
  TEXT SEARCH TEMPLATE <varname>object_name</varname> |
  TRANSFORM FOR <varname>type_name</varname> LANGUAGE <varname>lang_name</varname> |
  TYPE <varname>object_name</varname> |
  VIEW <varname>object_name</varname>

and <varname>aggregate_signature</varname> is:

* | [ <varname>argmode</varname> ] [ <varname>argname</varname> ] <varname>argtype</varname> [ , ... ] |
  [ [ <varname>argmode</varname> ] [ <varname>argname</varname> ] <varname>argtype</varname> [ , ... ] ] 
    ORDER BY [ <varname>argmode</varname> ] [ <varname>argname</varname> ] <varname>argtype</varname> [ , ... ]</codeblock>
    </section>
    <section id="section3">
      <title>描述</title>
      <p><codeph>ALTER EXTENSION</codeph> 更改已安装扩展的定义。 有几种子形式:</p>
      <parml>
        <plentry>
          <pt>UPDATE</pt>
          <pd>
            <p>此形式将扩展更新到一个较新版本。该扩展必须提供一个合适的更新脚本（或一系列脚本），可以将当前安装的版本修改为所要求的版本。</p>
          </pd>
        </plentry>
        <plentry>
          <pt>SET SCHEMA</pt>
          <pd>
            <p>这种形式将扩展对象移动到另一个模式中。 扩展名必须是<i>可重定位</i>。</p>
          </pd>
        </plentry>
        <plentry>
          <pt>ADD <varname>member_object</varname></pt>
          <pd>
            <p>这种形式将一个现有对象添加到该扩展中。这在扩展更新脚本中很有用。 该对象后续将被当作该扩展的一个成员。尤其是该对象只有通过删除扩展 才能删除。</p>
          </pd>
        </plentry>
        <plentry>
          <pt>DROP <varname>member_object</varname></pt>
          <pd>
            <p>这种形式从扩展中删除一个成员对象。这这主要对扩展更新脚本有用。只有 撤销该对象与其扩展之间的关联后才能删除该对象。</p>
          </pd>
        </plentry>
      </parml>
      <p>参阅 <xref href="https://www.postgresql.org/docs/9.6/extend-extensions.html"
          format="html" scope="external">将相关对象打包到扩展中</xref>获取更多关于这些操作的信息。</p>
      <p>用户必须对扩展有所有权才可以使用<codeph>ALTER EXTENSION</codeph>。
          <codeph>ADD</codeph> 和 <codeph>DROP</codeph> 形式也要求对需要增加或者删除的对象有所有权。</p>
    </section>
    <section id="section4">
      <title>参数</title>
      <parml>
        <plentry>
          <pt><varname>name</varname></pt>
          <pd>
            <p>需要安装的扩展名</p>
          </pd>
        </plentry>
        <plentry>
          <pt><varname>new_version</varname></pt>
          <pd>
            <p>新版本的扩展。<varname>new_version</varname>以是标识符或字符串文字。如果未指定，该命令将尝试更新到扩展控制文件中的默认版本。</p>
          </pd>
        </plentry>
        <plentry>
          <pt><varname>new_schema</varname></pt>
          <pd>
            <p>扩展的新模式。</p>
          </pd>
        </plentry>
        <plentry>
          <pt><varname>object_name</varname></pt>
          <pt><varname>aggregate_name</varname></pt>
          <pt><varname>function_name</varname></pt>
          <pt><varname>operator_name</varname></pt>
          <pd>
            <p>要从该扩展增加或者移除的对象的名称。表、聚集、域、外部表、函数、 操作符、操作符类、操作符族、序列、文本搜索对象、类型和视图的名称 可以被方案限定。</p>
          </pd>
        </plentry>
        <plentry>
          <pt><varname>source_type</varname></pt>
          <pd>
            <p>需要转换的源数据类型的名称。</p>
          </pd>
        </plentry>
        <plentry>
          <pt><varname>target_type</varname></pt>
          <pd>
            <p>需要转换的目标数据类型的名称。</p>
          </pd>
        </plentry>
        <plentry>
          <pt><varname>argmode</varname></pt>
          <pd>
            <p>函数或聚集参数的模型：<codeph>IN</codeph>,
                <codeph>OUT</codeph>, <codeph>INOUT</codeph>, 或者 <codeph>VARIADIC</codeph>。默认值是<codeph>IN</codeph>. </p>
            <p>这个命令会忽略掉<codeph>OUT</codeph> 参数。只需要输入参数才决定标识一个函数。这足够列出
                <codeph>IN</codeph>, <codeph>INOUT</codeph>和 <codeph>VARIADIC</codeph>
              参数。</p>
          </pd>
        </plentry>
        <plentry>
          <pt><varname>argname</varname></pt>
          <pd>
            <p>函数或聚集参数的名字。</p>
            <p>这个命令会忽略掉参数的名字，因为参数的数据类型已经决定标识一个函数了。</p>
          </pd>
        </plentry>
        <plentry>
          <pt><varname>argtype</varname></pt>
          <pd>
            <p>函数或者聚集参数的数据类型。</p>
          </pd>
        </plentry>
        <plentry>
          <pt><varname>left_type</varname></pt>
          <pt><varname>right_type</varname></pt>
          <pd>
            <p>操作符参数的数据类型（可以是方案限定）。 指定
                <codeph>NONE</codeph>对于一个前缀或后缀操作符的缺失的参数。</p>
          </pd>
        </plentry>
        <plentry>
          <pt>PROCEDURAL</pt>
          <pd>
            <p>Z这是一个噪声词。</p>
          </pd>
        </plentry>
        <plentry>
          <pt><varname>type_name</varname></pt>
          <pd>
            <p>该转换的数据类型的名称。</p>
          </pd>
        </plentry>
        <plentry>
          <pt><varname>lang_name</varname></pt>
          <pd>
            <p>该转换的语言的名称。</p>
          </pd>
        </plentry>
      </parml>
    </section>
    <section id="section5">
      <title>示例</title>
      <p>将hstore更新到2.0版本：</p>
      <codeblock>ALTER EXTENSION hstore UPDATE TO '2.0';</codeblock>
      <p>将<codeph>hstore</codeph>扩展的模式更改为
        <codeph>utils</codeph>:</p>
      <codeblock>ALTER EXTENSION hstore SET SCHEMA utils;</codeblock>
      <p>将一个已存在的函数添加到<codeph>hstore</codeph> 扩展：</p>
      <codeblock>ALTER EXTENSION hstore ADD FUNCTION populate_record(anyelement, hstore);</codeblock>
    </section>
    <section id="section6">
      <title>兼容性</title>
      <p><codeph>ALTER EXTENSION</codeph>是一个Greenplum数据库的扩展</p>
    </section>
    <section id="section7">
      <title>另见</title>
      <p><codeph><xref href="CREATE_EXTENSION.xml#topic1">CREATE EXTENSION</xref></codeph>,
            <codeph><xref href="DROP_EXTENSION.xml#topic1">DROP EXTENSION</xref></codeph></p>
    </section>
  </body>
</topic>
