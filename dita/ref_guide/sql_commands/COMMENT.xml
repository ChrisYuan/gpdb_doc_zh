<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
    <title id="bi20941">COMMENT</title>
    <body>
        <p id="sql_command_desc">定义或更改对象的注释。</p>
        <section id="section2">
            <title>概要</title>
            <codeblock id="sql_command_synopsis">COMMENT ON
{ TABLE <varname>object_name</varname> |
  COLUMN <varname>relation_name.column_name</varname> |
  AGGREGATE <varname>agg_name</varname> (<varname>agg_type</varname> [, ...]) |
  CAST (<varname>source_type</varname> AS <varname>target_type</varname>) |
  COLLATION <varname>object_name</varname>
  CONSTRAINT <varname>constraint_name</varname> ON <varname>table_name</varname> |
  CONVERSION <varname>object_name</varname> |
  DATABASE <varname>object_name</varname> |
  DOMAIN <varname>object_name</varname> |
  EXTENSION <varname>object_name</varname> |
  FOREIGN DATA WRAPPER <varname>object_name</varname> |
  FOREIGN TABLE <varname>object_name</varname> |
  FUNCTION <varname>func_name</varname> ([[<varname>argmode</varname>] [<varname>argname</varname>] <varname>argtype</varname> [, ...]]) |
  INDEX <varname>object_name</varname> |
  LARGE OBJECT <varname>large_object_oid</varname> |
  OPERATOR <varname>operator_name</varname> (<varname>left_type</varname>, <varname>right_type</varname>) |
  OPERATOR CLASS <varname>object_name</varname> USING <varname>index_method</varname> |
  [PROCEDURAL] LANGUAGE <varname>object_name</varname> |
  RESOURCE GROUP <varname>object_name</varname> |
  RESOURCE QUEUE <varname>object_name</varname> |
  ROLE <varname>object_name</varname> |
  RULE <varname>rule_name</varname> ON <varname>table_name</varname> |
  SCHEMA <varname>object_name</varname> |
  SEQUENCE <varname>object_name</varname> |
  SERVER <varname>object_name</varname> |
  TABLESPACE <varname>object_name</varname> |
  TRIGGER <varname>trigger_name</varname> ON <varname>table_name</varname> |
  TYPE <varname>object_name</varname> |
  VIEW <varname>object_name</varname> }
IS '<varname>text</varname>'</codeblock>
        </section>
        <section id="section3">
            <title>描述</title>
            <p><codeph>COMMENT</codeph>存储有关数据库对象的注释。
                每个对象仅存储一个注释字符串。
                要删除注释，请在文本字符串的位置写入<codeph>NULL</codeph>。
                删除对象时，注释将自动删除。
            </p>
            <p>对于大多数对象，只有对象的所有者才能设置注释。
                角色没有所有者，因此<codeph>COMMENT ON ROLE</codeph>的规则是您必须是超级用户才能对超级用户角色进行评论，
                或者具有<codeph>CREATEROLE</codeph>特权才能对非超级用户角色添加注释。
                当然，超级用户可以对任何对象添加注释。
            </p>
            <p>使用psql元命令<codeph>\dd</codeph>，<codeph>\d+</codeph>和<codeph>\l+</codeph>可以轻松提取注释。
                可以在psql使用的相同内置函数（即<codeph>obj_description</codeph>，<codeph>col_description</codeph>和<codeph>shobj_description</codeph>）之上构建其他用于提取注释的用户界面。
            </p>
        </section>
        <section id="section4">
            <title>参数</title>
            <parml>
                <plentry>
                    <pt>
                        <varname>object_name</varname>
                    </pt>
                    <pt>
                        <varname>relation_name.column_name</varname>
                    </pt>
                    <pt>
                        <varname>agg_name</varname>
                    </pt>
                    <pt>
                        <varname>constraint_name</varname>
                    </pt>
                    <pt>
                        <varname>func_name</varname>
                    </pt>
                    <pt>
                        <varname>operator_name</varname>
                    </pt>
                    <pt>
                        <varname>rule_name</varname>
                    </pt>
                    <pt>
                        <varname>trigger_name</varname>
                    </pt>
                    <pd>要注释的对象的名称。
                        表，聚合，排序规则，转换，域，外部表，函数，索引，运算符，运算符类，运算符族，序列，文本搜索对象，类型和视图的名称可以通过模式指定。
                        在对列进行注释时，<varname>relation_name</varname>必须引用表，视图，组合类型或外部表。
                        <note>Greenplum数据库不支持触发器。
                        </note>
                    </pd>
                </plentry>
                <plentry>
                    <pt>
                        <varname>aggregate_type</varname>
                    </pt>
                    <pd>聚合函数所基于的输入数据类型。
                        要引用零参数聚合函数，请写<codeph>*</codeph>代替输入数据类型列表。
                    </pd>
                </plentry>
                <plentry>
                    <pt>
                        <varname>source_type</varname>
                    </pt>
                    <pd>强制转换的源数据类型的名称。</pd>
                </plentry>
                <plentry>
                    <pt>
                        <varname>target_type</varname>
                    </pt>
                    <pd>强制转换的目标数据类型的名称。</pd>
                </plentry>
                <plentry>
                    <pt>
                        <varname>argmode</varname>
                    </pt>
                    <pd>函数参数的模式：<codeph>IN</codeph>，<codeph>OUT</codeph>，<codeph>INOUT</codeph>或<codeph>VARIADIC</codeph>。
                        如果省略，则默认值为<codeph>IN</codeph>。
                        注意，由于仅需要输入参数来确定函数的标识，因此<codeph>COMMENT ON FUNCTION</codeph>实际上并不对<codeph>OUT</codeph>参数给予任何关注。
                        因此，列出<codeph>IN</codeph>，<codeph>INOUT</codeph>和<codeph>VARIADIC</codeph>参数就足够了。
                    </pd>
                </plentry>
                <plentry>
                    <pt>
                        <varname>argname</varname>
                    </pt>
                    <pd>函数参数的名称。
                        请注意，<codeph>COMMENT ON FUNCTION</codeph>实际上并不关注参数名称，因为仅需要参数数据类型来确定函数的身份。
                    </pd>
                </plentry>
                <plentry>
                    <pt>
                        <varname>argtype</varname>
                    </pt>
                    <pd>函数参数的数据类型（可以由模式指定）（如果有）。
                    </pd>
                </plentry>
                <plentry>
                    <pt>
                        <varname>large_object_oid</varname>
                    </pt>
                    <pd>大对象的OID。</pd>
                    <pd>
                        <note>Greenplum数据库不支持PostgreSQL<xref href="https://www.postgresql.org/docs/9.4/largeobjects.html" format="html" scope="external">大对象工具</xref>来流存储在大对象结构中的用户数据。
                        </note>
                    </pd>
                </plentry>
                <plentry>
                    <pt>
                        <varname>left_type</varname>
                    </pt>
                    <pt>
                        <varname>right_type</varname>
                    </pt>
                    <pd>运算符参数的数据类型（可以由模式指定）。
                        为前缀或后缀运算符的缺少参数写<codeph>NONE</codeph>。
                    </pd>
                </plentry>
                <plentry>
                    <pt>PROCEDURAL</pt>
                    <pd>这是一个干扰词。</pd>
                </plentry>
                <plentry>
                    <pt>
                        <varname>text</varname>
                    </pt>
                    <pd>新注释，以字符串文字形式表示；或<codeph>NULL</codeph>以删除注释。
                    </pd>
                </plentry>
            </parml>
        </section>
        <section id="section5">
            <title>注解</title>
            <p>当前没有用于查看注释的安全机制：连接到数据库的任何用户都可以查看该数据库中对象的所有注释。
                对于共享对象，例如数据库，角色和表空间，注释是全局存储的，因此连接到集群中任何数据库的任何用户都可以查看共享对象的所有注释。
                因此，请勿在评论中添加对安全性至关重要的信息。
            </p>
        </section>
        <section id="section6">
            <title>示例</title>
            <p>在表<codeph>mytable</codeph>上添加注释：
            </p>
            <codeblock>COMMENT ON TABLE mytable IS 'This is my table.';</codeblock>
            <p>再次删除：</p>
            <codeblock>COMMENT ON TABLE mytable IS NULL;</codeblock>
            <p>其他示例：</p>
            <codeblock>COMMENT ON AGGREGATE my_aggregate (double precision) IS 'Computes sample variance';
COMMENT ON CAST (text AS int4) IS 'Allow casts from text to int4';
COMMENT ON COLLATION "fr_CA" IS 'Canadian French';
COMMENT ON COLUMN my_table.my_column IS 'Employee ID number';
COMMENT ON CONVERSION my_conv IS 'Conversion to UTF8';
COMMENT ON CONSTRAINT bar_col_cons ON bar IS 'Constrains column col';
COMMENT ON DATABASE my_database IS 'Development Database';
COMMENT ON DOMAIN my_domain IS 'Email Address Domain';
COMMENT ON EXTENSION hstore IS 'implements the hstore data type';
COMMENT ON FOREIGN DATA WRAPPER mywrapper IS 'my foreign data wrapper';
COMMENT ON FOREIGN TABLE my_foreign_table IS 'Employee Information in other database';
COMMENT ON FUNCTION my_function (timestamp) IS 'Returns Roman Numeral';
COMMENT ON INDEX my_index IS 'Enforces uniqueness on employee ID';
COMMENT ON LANGUAGE plpython IS 'Python support for stored procedures';
COMMENT ON LARGE OBJECT 346344 IS 'Planning document';
COMMENT ON OPERATOR ^ (text, text) IS 'Performs intersection of two texts';
COMMENT ON OPERATOR - (NONE, integer) IS 'Unary minus';
COMMENT ON OPERATOR CLASS int4ops USING btree IS '4 byte integer operators for btrees';
COMMENT ON OPERATOR FAMILY integer_ops USING btree IS 'all integer operators for btrees';
COMMENT ON ROLE my_role IS 'Administration group for finance tables';
COMMENT ON RULE my_rule ON my_table IS 'Logs updates of employee records';
COMMENT ON SCHEMA my_schema IS 'Departmental data';
COMMENT ON SEQUENCE my_sequence IS 'Used to generate primary keys';
COMMENT ON SERVER myserver IS 'my foreign server';
COMMENT ON TABLE my_schema.my_table IS 'Employee Information';
COMMENT ON TABLESPACE my_tablespace IS 'Tablespace for indexes';
COMMENT ON TEXT SEARCH CONFIGURATION my_config IS 'Special word filtering';
COMMENT ON TEXT SEARCH DICTIONARY swedish IS 'Snowball stemmer for Swedish language';
COMMENT ON TEXT SEARCH PARSER my_parser IS 'Splits text into words';
COMMENT ON TEXT SEARCH TEMPLATE snowball IS 'Snowball stemmer';
COMMENT ON TRIGGER my_trigger ON my_table IS 'Used for RI';
COMMENT ON TYPE complex IS 'Complex number data type';
COMMENT ON VIEW my_view IS 'View of departmental costs';</codeblock>
        </section>
        <section id="section7">
            <title>兼容性</title>
            <p>SQL标准中没有<codeph>COMMENT</codeph>语句。
            </p>
        </section>
    </body>
</topic>
