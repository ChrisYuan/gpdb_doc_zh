<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
    <title id="bv20941">CREATE FOREIGN DATA WRAPPER</title>
    <body>
        <p id="sql_command_desc">定义一个新的外部数据包装器。</p>
        <section id="section2">
            <title>概要</title>
            <codeblock id="sql_command_synopsis">CREATE FOREIGN DATA WRAPPER <varname>name</varname>
    [ HANDLER <varname>handler_function</varname> | NO HANDLER ]
    [ VALIDATOR <varname>validator_function</varname> | NO VALIDATOR ]
    [ OPTIONS ( [ mpp_execute { 'master' | 'any' | 'all segments' } [, ] ] <varname>option</varname> '<varname>value</varname>' [, ... ] ) ]</codeblock>
        </section>
        <section id="section3">
            <title>描述</title>
            <p><codeph>CREATE FOREIGN DATA WRAPPER</codeph>在当前数据库中创建一个新的外部数据包装器。
                定义外部数据包装器的用户将成为其所有者。
                </p>
            <p>只有超级用户才能创建外部数据包装器。</p>
        </section>
        <section id="section4">
            <title>参数</title>
            <parml>
                <plentry>
                    <pt><varname>name</varname></pt>
                    <pd>
                        <p>要创建的外部数据包装器的名称。
                            该名称在数据库中必须唯一。
                            </p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>HANDLER <varname>handler_function</varname></pt>
                    <pd>
                        <p>Greenplum数据库调用以检索外部表的执行函数的先前注册函数的名称。
                            <varname>hander_function</varname>必须不带任何参数，其返回类型必须是<codeph>fdw_handler</codeph>。
                            </p>
                        <p>可以创建没有处理程序函数的外部数据包装器，但是只能使用此类包装器声明而不访问外部表。</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>VALIDATOR <varname>validator_function</varname></pt>
                    <pd>
                        <p>Greenplum数据库调用以检查提供给外部数据包装程序的选项的先前注册函数的名称。
                            此函数还检查使用外部数据包装器的外部服务器，用户映射和外部表的选项。
                            如果未指定验证器函数或指定<codeph>NO VALIDATOR</codeph>，则Greenplum数据库在创建时不会检查选项。
                            （根据实现的不同，外部数据包装程序可能会在运行时忽略或拒绝无效的选项。）
                            </p>
                        <p><varname>validator_function</varname>必须带有两个参数：一个是<codeph>text[]</codeph>类型，
                            它包含存储在系统catalog中的选项数组，另一个是<codeph>oid</codeph>类型，它标识包含选项的系统catalog的OID。
                            </p>
                        <p>返回类型将被忽略；<varname>validator_function</varname>应该使用<codeph>ereport(ERROR)</codeph>函数报告无效的选项。
                            </p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>OPTIONS ( <varname>option</varname> '<varname>value</varname>' [, ... ] )</pt>
                    <pd>
                        <p>新的外部数据包装程序的选项。
                            选项名称必须唯一。
                            选项名称和值是特定于外部数据包装器的，并使用外部数据包装器的<varname>validator_function</varname>进行了验证。
                            </p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>mpp_execute { 'master' | 'any' | 'all segments' }</pt>
                    <pd>
                        <p>一个选项，用于标识外部数据包装器从其请求数据的主机：
                                <ul id="ul_zcg_2vd_mgb">
                                <li><codeph>master</codeph>（默认）— 从master主机请求数据。
                                    </li>
                                <li><codeph>any</codeph> — 向master主机或任一segment请求数据，具体取决于哪条路径的成本更低。
                                    </li>
                                <li><codeph>all segments</codeph> — 从所有segment请求数据。
                                    要支持此选项值，外部数据包装器必须具有将segment与数据匹配的策略。
                                    </li>
                            </ul></p>
                        <p>可以在多个命令中指定<codeph>mpp_execute</codeph>选项：
                            <codeph>CREATE FOREIGN TABLE</codeph>，<codeph>CREATE SERVER</codeph>和<codeph>CREATE FOREIGN DATA WRAPPER</codeph>。
                            外部表设置优先于外部服务器设置，然后是外部数据包装器设置。
                            </p>
                    </pd>
                </plentry>
            </parml>
        </section>
        <section id="section5">
            <title>注解</title>
            <p>外部数据包装器功能仍在开发中。
                查询的优化是原始的（大部分留给包装器）。
            </p>
        </section>
        <section id="section6">
            <title>示例</title>
            <p>创建一个无用的外部数据包装器，命名为<codeph>dummy</codeph>：</p><codeblock>CREATE FOREIGN DATA WRAPPER dummy;</codeblock>
            <p>使用名为<codeph>file_fdw_handler</codeph>的处理函数创建一个名为<codeph>file</codeph>的外部数据包装器：</p><codeblock>CREATE FOREIGN DATA WRAPPER file HANDLER file_fdw_handler;</codeblock>
            <p>创建一个名为<codeph>mywrapper</codeph>的外部数据包装器，其中包括一个选项：</p><codeblock>CREATE FOREIGN DATA WRAPPER mywrapper OPTIONS (debug 'true');</codeblock>
        </section>
        <section id="section7">
            <title>兼容性</title>
            <p><codeph>CREATE FOREIGN DATA WRAPPER</codeph>符合ISO/IEC 9075-9（SQL/MED），
                但<codeph>LIBRARY</codeph>和<codeph>VALIDATOR</codeph>子句是扩展是例外，
                而Greenplum数据库中未实现标准子句<codeph>LIBRARY</codeph>和<codeph>LANGUAGE</codeph>。
                </p>
            <p>但是请注意，整个SQL/MED函数尚未符合要求。</p>
        </section>
        <section id="section8">
            <title>另见</title>
            <p><codeph><xref href="ALTER_FOREIGN_DATA_WRAPPER.xml#topic1">ALTER FOREIGN DATA WRAPPER</xref></codeph>,
                        <codeph><xref href="DROP_FOREIGN_DATA_WRAPPER.xml#topic1">DROP
                    FOREIGN DATA WRAPPER</xref></codeph>,
                        <codeph><xref href="CREATE_SERVER.xml#topic1">CREATE
                    SERVER</xref></codeph>,
                        <codeph><xref href="CREATE_USER_MAPPING.xml#topic1">CREATE
                    USER MAPPING</xref></codeph></p>
        </section>
    </body>
</topic>
