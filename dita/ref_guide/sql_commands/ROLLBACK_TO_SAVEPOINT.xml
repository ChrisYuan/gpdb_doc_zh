<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
    <title id="ee20941">ROLLBACK TO SAVEPOINT</title>
    <body>
        <p id="sql_command_desc">将当前事务回滚到保存点。</p>
        <section id="section2">
            <title>概要</title>
            <codeblock id="sql_command_synopsis">ROLLBACK [WORK | TRANSACTION] TO [SAVEPOINT]
                <varname>savepoint_name</varname>
            </codeblock>
        </section>
        <section id="section3">
            <title>描述</title>
            <p>此命令将回滚在建立保存点之后执行的所有命令。
                该保存点保持有效，可以稍后在需要时回滚。
            </p>
            <p><codeph>ROLLBACK TO SAVEPOINT</codeph>隐式销毁在指定保存点之后建立的所有保存点。
            </p>
        </section>
        <section id="section4">
            <title>参数</title>
            <parml>
                <plentry>
                    <pt>WORK</pt>
                    <pt>TRANSACTION</pt>
                    <pd>可选关键字。它们没有作用。</pd>
                </plentry>
                <plentry>
                    <pt>
                        <varname>savepoint_name</varname>
                    </pt>
                    <pd>要回滚的保存点的名称。</pd>
                </plentry>
            </parml>
        </section>
        <section id="section5">
            <title>注解</title>
            <p>使用<codeph>RELEASE SAVEPOINT</codeph>销毁一个保存点，而不会丢弃建立该保存点后执行的命令的效果。
            </p>
            <p>指定尚未建立的保存点名称是错误的。</p>
            <p>游标相对于保存点具有某种非事务性的行为。
                当回滚保存点时，在保存点内部打开的所有游标都将关闭。
                如果先前打开的游标受保存点内的<codeph>FETCH</codeph>命令影响，
                该保存点随后被回滚，则该游标仍将保持在<codeph>FETCH</codeph>指向的位置（即，由<codeph>FETCH</codeph>引起的光标运动不会回滚）。
                关闭游标也不会通过回滚来撤消。
                但是，如果游标的查询所引起的其他副作用（例如查询所调用的volatile函数的副作用）在保存点期间发生，
                然后又回滚，则这些副作用也会被回滚。
                由于其执行导致事务中止的游标处于无法执行状态，
                因此尽管可以使用<codeph>ROLLBACK TO SAVEPOINT</codeph>还原该事务，但不能再使用该游标。
            </p>
        </section>
        <section id="section6">
            <title>示例</title>
            <p>要撤消在建立<codeph>my_savepoint</codeph>之后执行的命令的影响：
            </p>
            <codeblock>ROLLBACK TO SAVEPOINT my_savepoint;</codeblock>
            <p>光标位置不受保存点回滚的影响：</p>
            <codeblock>BEGIN;
DECLARE foo CURSOR FOR SELECT 1 UNION SELECT 2;
SAVEPOINT foo;
FETCH 1 FROM foo;
column
----------
        1
ROLLBACK TO SAVEPOINT foo;
FETCH 1 FROM foo;
column
----------
        2
COMMIT;</codeblock>
        </section>
        <section id="section7">
            <title>兼容性</title>
            <p>SQL标准指定关键字<codeph>SAVEPOINT</codeph>是必需的，但是Greenplum数据库（和Oracle）允许省略它。
                SQL在<codeph>ROLLBACK</codeph>之后只允许<codeph>WORK</codeph>，而不允许<codeph>TRANSACTION</codeph>作为干扰词。
                此外，SQL具有可选子句<codeph>AND [NO] CHAIN</codeph>，Greenplum数据库当前不支持该子句。
                在其他方面，此命令符合SQL标准。
            </p>
        </section>
        <section id="section8">
            <title>另见</title>
            <p>
                <codeph><xref href="BEGIN.xml#topic1" type="topic" format="dita"/></codeph>
                ,
                <codeph><xref href="COMMIT.xml#topic1" type="topic" format="dita"/></codeph>
                ,
                <codeph><xref href="./SAVEPOINT.xml#topic1" type="topic" format="dita"/></codeph>
                ,
                <codeph><xref href="RELEASE_SAVEPOINT.xml#topic1" type="topic" format="dita"/></codeph>
                ,
                <codeph><xref href="ROLLBACK.xml#topic1" type="topic" format="dita"/></codeph>
            </p>
        </section>
    </body>
</topic>
