<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
    <title id="bz20941">CREATE ROLE</title>
    <body>
        <p id="sql_command_desc">定义一个新的数据库角色（用户或组）。</p>
        <section id="section2">
            <title>概要</title>
            <codeblock id="sql_command_synopsis">CREATE ROLE <varname>name</varname> [[WITH] <varname>option</varname> [ ... ]]</codeblock>
            <p>其中<varname>option</varname>可以是：</p>
            <codeblock>      SUPERUSER | NOSUPERUSER
    | CREATEDB | NOCREATEDB
    | CREATEROLE | NOCREATEROLE
    | CREATEUSER | NOCREATEUSER
    | CREATEEXTTABLE | NOCREATEEXTTABLE 
      [ ( <varname>attribute</varname>='<varname>value</varname>'[, ...] ) ]
           where <varname>attributes</varname> and <varname>value</varname> are:
           type='readable'|'writable'
           protocol='gpfdist'|'http'
    | INHERIT | NOINHERIT
    | LOGIN | NOLOGIN
    | REPLICATION | NOREPLICATION
    | CONNECTION LIMIT <varname>connlimit</varname>
    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD '<varname>password</varname>'
    | VALID UNTIL '<varname>timestamp</varname>' 
    | IN ROLE <varname>rolename</varname> [, ...]
    | ROLE <varname>rolename</varname> [, ...]
    | ADMIN <varname>rolename</varname> [, ...]
    | USER <varname>rolename</varname> [, ...]
    | SYSID <varname>uid</varname> [, ...]
    | RESOURCE QUEUE <varname>queue_name</varname>
    | RESOURCE GROUP <varname>group_name</varname>
    | [ DENY <varname>deny_point</varname> ]
    | [ DENY BETWEEN <varname>deny_point</varname> AND <varname>deny_point</varname>]</codeblock>
        </section>
        <section id="section3">
            <title>描述</title>
            <p><codeph>CREATE ROLE</codeph>在Greenplum数据库系统中添加了新角色。
                角色是可以拥有数据库对象并具有数据库特权的实体。
                根据角色的使用方式，可以将角色视为用户，组或两者。
                您必须具有<codeph>CREATEROLE</codeph>特权或是数据库超级用户才能使用此命令。
                </p>
            <p>请注意，角色是在系统级别定义的，并且对于Greenplum数据库系统中的所有数据库均有效。
                </p>
        </section>
        <section id="section4">
            <title>参数</title>
            <parml>
                <plentry>
                    <pt>
                        <varname>name</varname>
                    </pt>
                    <pd>新角色的名称。</pd>
                </plentry>
                <plentry>
                    <pt>SUPERUSER</pt>
                    <pt>NOSUPERUSER</pt>
                    <pd>如果指定了<codeph>SUPERUSER</codeph>，则定义的角色将是超级用户，该超级用户可以覆盖数据库中的所有访问限制。
                        超级用户状态很危险，应仅在真正需要时使用。
                        您必须自己是超级用户才能创建新的超级用户。
                        默认值为<codeph>NOSUPERUSER</codeph>。
                        </pd>
                </plentry>
                <plentry>
                    <pt>CREATEDB</pt>
                    <pt>NOCREATEDB</pt>
                    <pd>如果指定了<codeph>CREATEDB</codeph>，将允许所定义的角色创建新数据库。
                        <codeph>NOCREATEDB</codeph>（默认值）将使角色无法创建数据库。
                        </pd>
                </plentry>
                <plentry>
                    <pt>CREATEROLE</pt>
                    <pt>NOCREATEROLE</pt>
                    <pd>如果指定了<codeph>CREATEROLE</codeph>，则允许定义的角色创建新角色，更改其他角色和删除其他角色。
                        <codeph>NOCREATEROLE</codeph>（默认值）将拒绝角色创建新角色或修改其他角色。
                        </pd>
                </plentry>
                <plentry>
                    <pt>CREATEUSER</pt>
                    <pt>NOCREATEUSER</pt>
                    <pd>这些子句已经过时，但仍然被<codeph>SUPERUSER</codeph>和<codeph>NOSUPERUSER</codeph>的拼写接受。
                        请注意，它们不等同于<codeph>CREATEROLE</codeph>和<codeph>NOCREATEROLE</codeph>子句。
                        </pd>
                </plentry>
                <plentry>
                    <pt>CREATEEXTTABLE</pt>
                    <pt>NOCREATEEXTTABLE</pt>
                    <pd>如果指定了<codeph>CREATEEXTTABLE</codeph>，则允许定义的角色创建外部表。
                        如果未指定，则默认<codeph>type</codeph>为<codeph>readable</codeph>，默认<codeph>protocol</codeph>为<codeph>gpfdist</codeph>。
                        有效类型为<codeph>gpfdist</codeph>，<codeph>gpfdists</codeph>，<codeph>http</codeph>和<codeph>https</codeph>。
                        <codeph>NOCREATEEXTTABLE</codeph>（默认类型）拒绝该角色创建外部表。
                        请注意，使用<codeph>file</codeph>或<codeph>execute</codeph>协议的外部表只能由超级用户创建。
                        </pd>
                    <pd>使用<codeph>GRANT...ON PROTOCOL</codeph>命令允许用户创建和使用具有自定义协议类型的外部表，
                        包括Greenplum数据库附带的<codeph>s3</codeph>和<codeph>pxf</codeph>协议。
                        </pd>
                </plentry>
                <plentry>
                    <pt>INHERIT</pt>
                    <pt>NOINHERIT</pt>
                    <pd>如果指定了该属性，则<codeph>INHERIT</codeph>（默认设置）允许该角色使用为其直接或间接所属的所有角色授予的任何数据库特权。
                        使用<codeph>NOINHERIT</codeph>时，另一个角色的成员资格仅授予<codeph>SET ROLE</codeph>权限给该另一个角色。
                        </pd>
                </plentry>
                <plentry>
                    <pt>LOGIN</pt>
                    <pt>NOLOGIN</pt>
                    <pd>如果指定，则<codeph>LOGIN</codeph>允许角色登录数据库。
                        可以将具有<codeph>LOGIN</codeph>属性的角色视为用户。
                        具有<codeph>NOLOGIN</codeph>的角色对于管理数据库特权很有用，并且可以视为组。
                        如果未指定，则<codeph>NOLOGIN</codeph>为默认值，
                        除非<codeph>CREATE ROLE</codeph>通过其替代拼写<codeph><xref href="CREATE_USER.xml#topic1">CREATE USER</xref></codeph>被调用时。
                        </pd>
                </plentry>
                <plentry>
                    <pt>REPLICATION</pt>
                    <pt>NOREPLICATION</pt>
                    <pd>这些子句确定是允许角色启动流复制还是使系统进入和退出备份模式。
                        具有<codeph>REPLICATION</codeph>属性的角色是具有很高特权的角色，并且仅应在实际用于复制的角色上使用。
                        如果未指定，则<codeph>NOREPLICATION</codeph>是默认值。
                        </pd>
                </plentry>
                <plentry>
                    <pt>CONNECTION LIMIT <varname>connlimit</varname></pt>
                    <pd>此角色可以建立的并发连接的最大数量。默认值-1表示没有限制。
                        </pd>
                </plentry>
            </parml>
            <parml>
                <plentry>
                    <pt>PASSWORD <varname>password</varname></pt>
                    <pd>使用<codeph>LOGIN</codeph>属性设置角色的用户密码。
                        如果您不打算使用密码身份验证，则可以忽略此选项。
                        如果未指定密码，则密码将设置为null，并且该用户的密码身份验证将始终失败。
                        空密码可以有选择地显式写为<codeph>PASSWORD NULL</codeph>。
                        </pd>
                </plentry>
                <plentry>
                    <pt>ENCRYPTED</pt>
                    <pt>UNENCRYPTED</pt>
                    <pd>这些关键字控制密码是否以加密方式存储在系统catalog中。
                        （如果未指定，则默认行为由配置参数<varname>password_encryption</varname>决定。）
                        如果显示的密码字符串已经采用MD5加密格式，则将按原样存储加密，
                        而不管是否指定了<codeph>ENCRYPTED</codeph>或<codeph>UNENCRYPTED</codeph>（因为系统无法解密指定的加密密码字符串）。
                        这允许在转储/还原期间重新加载加密的密码。
                        </pd>
                </plentry>
                <plentry>
                    <pt>VALID UNTIL <varname>'timestamp'</varname></pt>
                    <pd>VALID UNTIL子句设置日期和时间，之后该角色的密码将不再有效。
                        如果省略此子句，密码将永不过期。
                        </pd>
                </plentry>
                <plentry>
                    <pt>IN ROLE <varname>rolename</varname></pt>
                    <pd>将新角色添加为命名角色的成员。
                        请注意，没有任何选项可以将新角色添加为管理员。
                        使用单独的<codeph>GRANT</codeph>命令来执行此操作。
                        </pd>
                </plentry>
                <plentry>
                    <pt>ROLE <varname>rolename</varname></pt>
                    <pd>将命名角色添加为该角色的成员，从而使该新角色成为一个组。
                        </pd>
                </plentry>
                <plentry>
                    <pt>ADMIN <varname>rolename</varname></pt>
                    <pd><codeph>ADMIN</codeph>子句类似于<codeph>ROLE</codeph>，
                        但是被提及的角色被使用<codeph>WITH ADMIN OPTION</codeph>加入到新角色中，
                        从而赋予他们将这个角色的成员资格授予其他人的权利。
                        </pd>
                </plentry>
                <plentry>
                    <pt>RESOURCE GROUP <varname>group_name</varname></pt>
                    <pd>要分配给新角色的资源组的名称。
                        该角色将受限于资源组配置的并发事务，内存和CPU限制。
                        您可以将一个资源组分配给一个或多个角色。
                        </pd>
                    <pd>如果未为新角色指定资源组，则会自动为该角色分配角色的默认资源组，
                        为<codeph>SUPERUSER</codeph>角色分配<codeph>admin_group</codeph>，
                        为非管理员角色分配<codeph>default_group</codeph>。
                        </pd>
                    <pd>您可以将<codeph>admin_group</codeph>资源组分配给具有<codeph>SUPERUSER</codeph>属性的任何角色。
                        </pd>
                    <pd>您可以将<codeph>default_group</codeph>资源组分配给任何角色。
                        </pd>
                    <pd>您不能将为外部组件创建的资源组分配给角色。</pd></plentry>
                <plentry>
                    <pt>RESOURCE QUEUE <varname>queue_name</varname></pt>
                    <pd>新用户级别角色将分配到的资源队列的名称。
                        只能将具有<codeph>LOGIN</codeph>特权的角色分配给资源队列。
                        特殊关键字<codeph>NONE</codeph>表示将角色分配给默认资源队列。
                        一个角色只能属于一个资源队列。
                        </pd>
                    <pd>具有<codeph>SUPERUSER</codeph>属性的角色不受资源队列限制。
                        对于超级用户角色，无论分配的资源队列施加什么限制，查询总是立即运行。
                        </pd>
                </plentry>
                <plentry>
                    <pt>DENY <varname>deny_point</varname></pt>
                    <pt>DENY BETWEEN <varname>deny_point</varname> AND
                        <varname>deny_point</varname></pt>
                    <pd><codeph>DENY</codeph>和<codeph>DENY BETWEEN</codeph>关键字设置在登录时强制执行的基于时间的约束。
                        <codeph>DENY</codeph>设置拒绝访问的日期或日期和时间。
                        <codeph>DENY BETWEEN</codeph>设置一个拒绝访问的时间间隔。
                        两者都使用具有以下格式的参数<varname>deny_point</varname>：
                        </pd>
                    <pd>
                        <codeblock>DAY day [ TIME 'time' ]</codeblock>
                    </pd>
                    <pd><codeph>deny_point</codeph>参数的两个部分使用以下格式：
                        </pd>
                    <pd>
                        <p>对于<codeph>day</codeph>:</p>
                        <codeblock>{'Sunday' | 'Monday' | 'Tuesday' |'Wednesday' | 'Thursday' | 'Friday' | 
'Saturday' | 0-6 }</codeblock>
                        <p>对于<codeph>time</codeph>:</p>
                        <codeblock>{ 00-23 : 00-59 | 01-12 : 00-59 { AM | PM }}</codeblock>
                    </pd>
                    <pd><codeph>DENY BETWEEN</codeph>子句使用两个<varname>deny_point</varname>参数：
                        <codeblock>DENY BETWEEN <varname>deny_point</varname> AND <varname>deny_point</varname></codeblock></pd>
                    <pd>有关基于时间的约束的更多信息和示例，请参阅<i>Greenplum数据库管理员指南</i>中的“管理角色和特权”。
                        </pd>
                </plentry>
            </parml>
        </section>
        <section id="section5">
            <title>注解</title>
            <p>添加和删除角色成员（管理组）的首选方法是使用<codeph><xref href="./GRANT.xml#topic1" type="topic" format="dita"/></codeph>和<codeph><xref href="./REVOKE.xml#topic1" type="topic" format="dita"/></codeph>。
                </p>
            <p><codeph>VALID UNTIL</codeph>子句仅为密码而不是角色定义过期时间。
                使用非基于密码的身份验证方法登录时，不会强制使用到期时间。
                </p>
            <p><codeph>INHERIT</codeph>属性控制可授予特权（数据库对象和角色成员的访问特权）的继承。
                它不适用于由<codeph>CREATE ROLE</codeph>和<codeph>ALTER ROLE</codeph>设置的特殊角色属性。
                例如，即使设置了<codeph>INHERIT</codeph>，具有<codeph>CREATEDB</codeph>特权的角色成员也不会立即授予创建数据库的能力。
                这些特权/属性永远不会被继承：
                <codeph>SUPERUSER</codeph>，<codeph>CREATEDB</codeph>，<codeph>CREATEROLE</codeph>，
                <codeph>CREATEEXTTABLE</codeph>，<codeph>LOGIN</codeph>，<codeph>RESOURCE GROUP</codeph>和<codeph>RESOURCE QUEUE</codeph>。
                必须在每个用户级角色上设置属性。
                </p>
            <p>由于向后兼容，<codeph>INHERIT</codeph>属性是默认属性。
                在以前的Greenplum数据库版本中，用户始终可以访问其所属组的所有特权。
                但是，<codeph>NOINHERIT</codeph>提供与SQL标准中指定的语义更接近的匹配。
                </p>
            <p>使用<codeph>CREATEROLE</codeph>特权时要小心。
                对于<codeph>CREATEROLE</codeph>-role的特权，没有继承的概念。
                这意味着，即使一个角色没有特定的特权，但被允许创建其他角色，
                它也可以轻松地创建另一个角色，而该角色的特权不同于其自己的角色（创建具有超级用户特权的角色除外）。
                例如，如果角色具有<codeph>CREATEROLE</codeph>特权，但没有<codeph>CREATEDB</codeph>特权，则它可以使用<codeph>CREATEDB</codeph>特权创建新角色。
                因此，将具有<codeph>CREATEROLE</codeph>特权的角色视为几乎超级用户角色。
                </p>
            <p>超级用户绝不执行<codeph>CONNECTION LIMIT</codeph>选项。</p>
            <p>使用此命令指定未加密的密码时必须小心。
                密码将以明文形式传输到服务器，并且也可能会记录在客户端的命令历史记录或服务器日志中。
                但是，客户端程序<codeph>createuser</codeph>传输加密的密码。
                另外，psql包含命令<codeph>\password</codeph>，可用于稍后安全地更改密码。
                </p>
        </section>
        <section id="section6">
            <title>示例</title>
            <p>创建一个可以登录但不提供密码的角色：</p>
            <codeblock>CREATE ROLE jonathan LOGIN;</codeblock>
            <p>创建一个属于资源队列的角色：</p>
            <codeblock>CREATE ROLE jonathan LOGIN RESOURCE QUEUE poweruser;</codeblock>
            <p>使用有效期至2016年底的密码创建角色
                （<codeph>CREATE USER</codeph>与<codeph>CREATE ROLE</codeph>相同，只不过它暗含了<codeph>LOGIN</codeph>）：
                </p>
            <codeblock>CREATE USER joelle WITH PASSWORD 'jw8s0F4' VALID UNTIL '2017-01-01';</codeblock>
            <p>创建一个可以创建数据库并管理其他角色的角色：</p>
            <codeblock>CREATE ROLE admin WITH CREATEDB CREATEROLE;</codeblock>
            <p>创建一个角色，该角色在星期日不允许登录访问：</p>
            <codeblock>CREATE ROLE user3 DENY DAY 'Sunday';</codeblock>
            <p>创建一个可以创建类型为'gpfdist'的可读可写外部表的角色：
                </p>
            <codeblock>CREATE ROLE jan WITH CREATEEXTTABLE(type='readable', protocol='gpfdist')
   CREATEEXTTABLE(type='writable', protocol='gpfdist'); </codeblock>
            <p>创建一个角色，分配一个资源组：</p>
            <codeblock>CREATE ROLE bill RESOURCE GROUP rg_light;</codeblock>
        </section>
        <section id="section7">
            <title>兼容性</title>
            <p>SQL标准定义了用户和角色的概念，但是将它们视为不同的概念，并将所有定义用户的命令留给数据库实现指定。
                在Greenplum数据库中，用户和角色被统一为单一类型的对象。
                因此，角色具有比标准中更多的可选属性。
                </p>
            <p><codeph>CREATE ROLE</codeph>在SQL标准中，但是该标准仅需要以下语法：
                </p>
            <codeblock>CREATE ROLE <varname>name</varname> [WITH ADMIN <varname>rolename</varname>]</codeblock>
            <p>Greenplum数据库扩展是允许多个初始管理员，以及<codeph>CREATE ROLE</codeph>的所有其他选项。
                </p>
            <p>通过为用户提供<codeph>NOINHERIT</codeph>属性，
                而为角色赋予<codeph>INHERIT</codeph>属性，可以最接近地逼近SQL标准指定的行为。
                </p>
        </section>
        <section id="section8">
            <title>另见</title>
            <p><codeph><xref href="./SET_ROLE.xml#topic1" type="topic" format="dita"/></codeph>,
                        <codeph><xref href="ALTER_ROLE.xml#topic1" type="topic" format="dita"
                    /></codeph>, <codeph><xref href="./DROP_ROLE.xml#topic1" type="topic"
                        format="dita"/></codeph>, <codeph><xref href="./GRANT.xml#topic1"
                        type="topic" format="dita"/></codeph>, <codeph><xref
                        href="./REVOKE.xml#topic1" type="topic" format="dita"/></codeph>,
                        <codeph><xref href="CREATE_RESOURCE_QUEUE.xml#topic1" type="topic"
                        format="dita"/></codeph>
                <codeph><xref href="CREATE_RESOURCE_GROUP.xml#topic1" type="topic" format="dita"
                    /></codeph></p>
        </section>
    </body>
</topic>
