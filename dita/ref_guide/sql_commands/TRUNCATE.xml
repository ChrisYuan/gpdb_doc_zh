<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
    <title id="ep20941">TRUNCATE</title>
    <body>
        <p id="sql_command_desc">清空表的所有行。</p>
        <section id="section2">
            <title>概要</title>
            <codeblock id="sql_command_synopsis">TRUNCATE [TABLE] [ONLY] <varname>name</varname> [ * ] [, ...]
                [ RESTART IDENTITY | CONTINUE IDENTITY ] [CASCADE | RESTRICT]
            </codeblock>
        </section>
        <section id="section3">
            <title>描述</title>
            <p><codeph>TRUNCATE</codeph>快速删除一个表或一组表中的所有行。
                它与在每个表上进行不限定<codeph><xref href="DELETE.xml#topic1" type="topic" format="dita"/></codeph>的效果相同，
                但是由于它实际上并不扫描表，因此速度更快。
                这在大型表上最有用。
            </p>
            <p>您必须在表上具有<codeph>TRUNCATE</codeph>特权才能清空表行。
            </p>
            <p><codeph>TRUNCATE</codeph>在对其操作的表上获取访问排他锁，这将阻止该表上的所有其他并发操作。
                如果指定了<codeph>RESTART IDENTITY</codeph>，则将要重新计数的所有序列都将被排他地锁定。
                如果需要并发访问表，则应改用<codeph>DELETE</codeph>命令。
            </p>
        </section>
        <section id="section4">
            <title>参数</title>
            <parml>
                <plentry>
                    <pt>
                        <varname>name</varname>
                    </pt>
                    <pd>要清空的表的名称（可选，限定schema）。
                        如果在表名之前指定了<codeph>ONLY</codeph>，则仅该表被清空。
                        如果未指定<codeph>ONLY</codeph>，则该表及其所有子表（如果有）将被清空。
                        （可选）可以在表名称后指定<codeph>*</codeph>，以显式指示包括子表。
                    </pd>
                </plentry>
                <plentry>
                    <pt>CASCADE</pt>
                    <pd>因为此关键字适用于外键引用（Greenplum数据库中不支持），所以它无效。
                    </pd>
                </plentry>
                <plentry>
                    <pt>RESTART IDENTITY</pt>
                    <pd>自动重新启动被清空表的列所拥有的序列。</pd>
                </plentry>
                <plentry>
                    <pt>CONTINUE IDENTITY</pt>
                    <pd>不要更改序列的值。这是默认值。</pd>
                </plentry>
                <plentry>
                    <pt>RESTRICT</pt>
                    <pd>因为此关键字适用于外键引用（Greenplum数据库中不支持），所以它无效。
                    </pd>
                </plentry>
            </parml>
        </section>
        <section id="section5">
            <title>注解</title>
            <p><codeph>TRUNCATE</codeph>将不会运行表可能存在的任何用户定义的<codeph>ON DELETE</codeph>触发器。
            </p>
            <p><codeph>TRUNCATE</codeph>不会清空从指定表继承的任何表。
                仅指定的表被清空，而不是其子表。
            </p>
            <p><codeph>TRUNCATE</codeph>不会清空分区表的任何子表。
                如果指定分区表的子表，则<codeph>TRUNCATE</codeph>不会从该表及其子表中删除行。
            </p>
            <p><codeph>TRUNCATE</codeph>不是MVCC安全的。
                清空后，如果并发事务使用清空发生之前获取的快照，则该表将对并发事务显示为空。
            </p>
            <p>对于表中的数据，<codeph>TRUNCATE</codeph>是事务安全的：如果所属的事务未提交，则清空将被安全地回滚。
            </p>
            <p><codeph>TRUNCATE</codeph>在其操作的每个表上获取<codeph>ACCESS EXCLUSIVE</codeph>锁，该锁将阻止该表上的所有其他并发操作。
                如果需要并发访问表，则应改用<codeph>DELETE</codeph>命令。
            </p>
            <p>当指定了<codeph>RESTART IDENTITY</codeph>时，隐式的<codeph>ALTER SEQUENCE RESTART</codeph>操作也将以事务方式完成；
                也就是说，如果所在的事务没有提交，它们将被回滚。
                这不同于<codeph>ALTER SEQUENCE RESTART</codeph>的正常行为。
                请注意，如果在事务回滚之前对重新启动的序列执行了任何其他序列操作，则这些操作对序列的影响将被回滚，但不会对<codeph>currval()</codeph>产生影响。
                也就是说，在事务<codeph>currval()</codeph>之后，它将继续反映在失败的事务中获得的最后一个序列值，即使序列本身可能不再与此一致。
                这类似于事务失败后<codeph>currval()</codeph>的通常行为。
            </p>
        </section>
        <section id="section6">
            <title>示例</title>
            <p>清空表<codeph>films</codeph>和<codeph>distributors</codeph>：
            </p>
            <codeblock>TRUNCATE films, distributors;</codeblock>
            <p>相同，并重置所有关联的序列生成器：</p>
            <codeblock>TRUNCATE films, distributors RESTART IDENTITY;</codeblock>
        </section>
        <section id="section7">
            <title>兼容性</title>
            <p>SQL：2008标准包括带有语法<codeph>TRUNCATE TABLE <varname>tablename</varname></codeph>的<codeph>TRUNCATE</codeph>命令。
                子句<codeph>CONTINUE IDENTITY</codeph>/<codeph>RESTART IDENTITY</codeph>也出现在该标准中，但是尽管具有相关的含义，但略有不同。
                该命令的一些并发行为由标准实现定义，因此应考虑上述注意事项，并在必要时与其他实现进行比较。
            </p>
        </section>
        <section id="section8">
            <title>另见</title>
            <p>
                <codeph>
                    <xref href="DELETE.xml#topic1" type="topic" format="dita"/>
                </codeph>
                ,
                <codeph>
                    <xref
                            href="DROP_TABLE.xml#topic1" type="topic" format="dita"/>
                </codeph>
            </p>
        </section>
    </body>
</topic>
