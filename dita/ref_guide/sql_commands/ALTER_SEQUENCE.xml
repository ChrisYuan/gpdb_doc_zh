<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1"><title id="ax20941">ALTER SEQUENCE</title><body><p id="sql_command_desc">更改一个序列发生器的定义。</p><section id="section2"><title>概要</title><codeblock id="sql_command_synopsis">ALTER SEQUENCE [ IF EXISTS ] <varname>name</varname> [INCREMENT [ BY ] <varname>increment</varname>] 
     [MINVALUE <varname>minvalue</varname> | NO MINVALUE] 
     [MAXVALUE <varname>maxvalue</varname> | NO MAXVALUE] 
     [START [ WITH ] <varname>start</varname> ]
     [RESTART [ [ WITH ] <varname>restart</varname>] ]
     [CACHE <varname>cache</varname>] [[ NO ] CYCLE] 
     [OWNED BY {<varname>table.column</varname> | NONE}]

ALTER SEQUENCE [ IF EXISTS ] <varname>name</varname> OWNER TO <varname>new_owner</varname>

ALTER SEQUENCE [ IF EXISTS ] <varname>name</varname> RENAME TO <varname>new_name</varname>

ALTER SEQUENCE [ IF EXISTS ] <varname>name</varname> SET SCHEMA <varname>new_schema</varname></codeblock></section><section id="section3"><title>描述</title><p><codeph>ALTER SEQUENCE</codeph> 更改一个现有序列发生器的参数。任何没有被明确设置的参数在 <codeph>ALTER SEQUENCE</codeph> 命中，都要维持他们之前的设置。</p><p>用户必须拥有该序列才能使用<codeph>ALTER SEQUENCE</codeph>。 要更改一个序列 的模式，用户还必须拥有新模式上的<codeph>CREATE</codeph>特权。 注意超级用户自动拥有所有的特权。.</p>
      <p>要改变所有者，用户必须是新角色的直接或者间接成员，而且新角色必须在序列的模式上拥有<codeph>CREATE</codeph>权限 (这些限制迫使更改所有者不能执行删除和重新创建序列所无法做的任何事情。 但是，超级用户仍然可以更改任何序列的所有权。)</p></section><section id="section4"><title>参数</title><parml><plentry><pt><varname>name</varname></pt><pd>要修改的序列的名称（可选方案限定）。
</pd></plentry>
        <plentry>
          <pt>IF EXISTS</pt>
          <pd>如果序列不存在不会抛出错误，而只会触发一次提醒。</pd>
        </plentry><plentry><pt><varname>increment</varname></pt><pd>子句 <codeph>INCREMENT BY <varname>increment</varname></codeph> 是可选的。一个正值将产生一个上升序列，一个负值会产生一个下降序列。如果未被指定，则旧的增量值将被保持。</pd></plentry><plentry><pt><varname>minvalue</varname></pt><pt>NO MINVALUE</pt><pd> 可选的子句 <codeph>MINVALUE <varname>minvalue</varname></codeph> 决定一个序列 能产生的最小值。 如果 <codeph>NO MINVALUE</codeph> 被指定, 上升序列和下降序列的默认值分别是 1 和 -263-1。如果这些选项都没有被指定，将保持当前的 最小值。</pd></plentry><plentry><pt><varname>maxvalue</varname></pt><pt>NO MAXVALUE</pt><pd>可选子句 <codeph>MAXVALUE <varname>maxvalue</varname></codeph> 决定一个序列 能产生的最大值。 如果 <codeph>NO MAXVALUE</codeph> 被指定, 上升序列和下降序列的默认值分别是 263-1 和 -1。如果这些选项都没有被指定，将保持当前的最大值。</pd></plentry>
        <plentry>
          <pt>start</pt>
          <pd>可选子句START WITH <varname>start</varname>更改记录的序列起始值。 这对<i>current</i> 序列值没有影响。 它只是设置将来的<codeph>ALTER SEQUENCE RESTART</codeph> 命令将使用的值。</pd>
        </plentry><plentry><pt><varname>restart</varname></pt><pd>可选子句 <codeph>RESTART [ WITH <varname>restart</varname> ]</codeph> 更改序列的当前值。 这等效于使用 <codeph><varname>is_called</varname> = false</codeph> 调用  <codeph>setval(<varname>sequence</varname>, <varname>start_val</varname>, <varname>is_called</varname>)</codeph> 函数。 指定的值将由 <codeph>nextval(<varname>sequence</varname>)</codeph> 函数的下一次调用返回。 在没有 <varname>restart</varname> 值的情况下写入<codeph>RESTART</codeph>等同于提供由 <codeph>CREATE SEQUENCE</codeph> 记录或由 <codeph>ALTER SEQUENCE START WITH</codeph> 最后设置的开始值。</pd></plentry>
        <plentry>
          <pt><varname>new_owner</varname></pt>
          <pd>序列新所有者的用户名。</pd>
        </plentry><plentry><pt><varname>cache</varname></pt><pd><codeph>CACHE <varname>cache</varname></codeph>子句中使序列号可以预先分配并存储在内存中，以加快访问速度。 最小值为1（一次只能生成一个值，即没有高速缓存）。 如果未指定，则将保留旧的缓存值</pd></plentry><plentry><pt>CYCLE</pt><pd>可选的<codeph>CYCLE</codeph>关键字可用于在序列由升序或降序达到<varname>maxvalue</varname>或<varname>minvalue</varname>时使序列回绕。 如果达到限制，则生成的下一个数字将是各自的<varname>minvalue</varname>或<varname>maxvalue</varname>。</pd></plentry><plentry><pt>NO CYCLE</pt><pd>如果指定了可选的<codeph>NO CYCLE</codeph>关键字，则在序列达到最大值后，对<codeph>nextval()</codeph>的任何调用都将返回错误。 如果未指定<codeph>CYCLE</codeph>或<codeph>NO CYCLE</codeph>，则将保留旧的循环行为。</pd></plentry><plentry><pt>OWNED BY <varname>table.column</varname></pt><pt>OWNED BY NONE</pt><pd><codeph>OWNED BY</codeph>选项使序列与特定的表列相关联，这样，如果该列（或其整个表）被删除，该序列也将被自动删除。 如果指定，则此关联替换该序列的任何先前指定的关联。 指定的表必须具有相同的所有者，并且与序列具有相同的架构。 指定<codeph>OWNED BY NONE</codeph>会删除任何现有的表列关联。</pd></plentry>
        <plentry>
          <pt><varname>new_name</varname></pt>
          <pd>序列的新名称。</pd>
        </plentry><plentry><pt><varname>new_schema</varname></pt><pd>序列的新模式。</pd></plentry></parml></section><section id="section5"><title>注意</title><p>为了避免阻塞从同一序列中获取数字的并发事务，永远不会回滚<codeph>ALTER SEQUENCE</codeph>对序列生成参数的影响。 这些更改将立即生效，并且不可逆。 但是，<codeph>OWNED BY</codeph>， <codeph>OWNER TO</codeph>， <codeph>RENAME TO</codeph> 和<codeph>SET SCHEMA</codeph>子句是普通的目录更新，可以回滚。</p><p><codeph>ALTER SEQUENCE</codeph> 不会立即影响除当前会话以外的具有预分配（缓存）序列值的会话中的<codeph>nextval()</codeph>结果。 在注意到更改的序列生成参数之前，它们将用尽所有缓存的值。 当前会话将立即受到影响。</p><p>由于历史原因， <codeph>ALTER TABLE</codeph> 也可以与序列一起使用。 但是序列允许的 <codeph>ALTER TABLE</codeph>的唯一变体与上述形式等效。</p></section><section id="section6"><title>示例</title><p>重启一个被称为<codeph>serial</codeph>的序列在<codeph>105</codeph>：</p><codeblock>ALTER SEQUENCE serial RESTART WITH 105;</codeblock></section><section id="section7"><title>兼容性</title><p><codeph>ALTER SEQUENCE</codeph>符合SQL标准，<codeph>START
          WITH</codeph>, <codeph>OWNED BY</codeph>, <codeph>OWNER TO</codeph>, <codeph>RENAME
          TO</codeph>和 <codeph>SET SCHEMA</codeph>子句除外，它们是Greenplum数据库的扩展。</p></section><section id="section8"><title>另见</title><p><codeph><xref href="./CREATE_SEQUENCE.xml#topic1" type="topic" format="dita"/></codeph>,
            <codeph><xref href="./DROP_SEQUENCE.xml#topic1" type="topic" format="dita"/></codeph>,
            <codeph><xref href="./ALTER_TABLE.xml#topic1" type="topic" format="dita"/></codeph></p></section></body></topic>
